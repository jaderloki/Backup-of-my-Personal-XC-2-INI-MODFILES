[AbiziOTS.AbiziOTSHelper]

enableLog = false
MaxOfficerTraining = 3
;this means that there are 4 officer training levels: initial, and then 3 more.
enableGTSUnlockGating = true
enableNeedsAttention = true
; this highlights the GTS if there are officers who can train;
learnedColorName = "#3ABD23"
officerLevelColor = "#fcb103"
unchoseAbilityColor = "#8f8c85"

EnableSpecialRankNames = true
;an alternative to Iridar's rank replacer. If this is set to false, then officers will continue to use their usual rank names, or the ones given to them by Iridar's rank replacer if used.
ApplyNamesToOverridenOfficers = true
;Do you also want these names to affect people who are treated as officers with the compatibility rules from below?


UnequipOnTrainingStart = true
;change to false so that officer don't unequip all of their gear when you slot them into training.

ChanceForBornToLead = 10
;this number represents the probability that a soldier will roll for Born To Lead ability on creation. Default 10%.
+ExcludedTemplatesFromBornToLead = "SparkSoldier"
;character templates that cannot recieve Born To Lead.


;Character Templates to get my "new" panic abilities which are just reskins of existing ones, for flavor. Add any character tempalte that should be able to panic, not covered here.
+CharacterTemplatesToPatch="Soldier"
+CharacterTemplatesToPatch="ReaperSoldier"
+CharacterTemplatesToPatch="SkirmisherSoldier"
+CharacterTemplatesToPatch="TemplarSoldier"

;in hours
TrainTimePerRank[0] = 240
TrainTimePerRank[1] = 240
TrainTimePerRank[2] = 240
TrainTimePerRank[3] = 240

;difficulty modifiers. This is multiplied by the time, after com-int reduction. Non-integral results are rounded down (truncated).
;rookie
TrainTimeDifficultyModifier[0] = 0.66
;veteral
TrainTimeDifficultyModifier[1] = 0.66
;commander
TrainTimeDifficultyModifier[2] = 0.66
;legend
TrainTimeDifficultyModifier[3] = 1.0

;comint training reduction.
;based on the formula time = 12*comint + 3 * comint^2 (where comint 0 is normal and comint 4 is savant).
; ;normal
+TrainReductionComInt = 0
;above average
+TrainReductionComInt = 15
;gifted
+TrainReductionComInt= 36
;genius
+TrainReductionComInt= 63
;savant
+TrainReductionComInt= 96

SoldierRankOfficerGate[0] = 1
SoldierRankOfficerGate[1] = 3
SoldierRankOfficerGate[2] = 5
SoldierRankOfficerGate[3] = 7

MissionNumberGate[0] = 3
MissionNumberGate[1] = 6
MissionNumberGate[2] = 11
MissionNumberGate[3] = 17

;difficulty modifier. This is multiplied by the required mission number. Non-integral results are rounded down.
;rookie
MissionNumberDifficultyModifier[0] = 0.66
;veteran
MissionNumberDifficultyModifier[1] = 0.66
;Commander
MissionNumberDifficultyModifier[2] = 0.66
;legend
MissionNumberDifficultyModifier[3] = 1.0

SalaryPerRank[0] = 10
SalaryPerRank[1] = 15
SalaryPerRank[2] = 20
SalaryPerRank[3] = 25

;difficulty modifier. This is multiplied by the total salary you lose per month. Non-integral results are rounded down.
;rookie
SalaryDifficultyModifier[0] = 0.5
;veteran
SalaryDifficultyModifier[1] = 0.5
;commander
SalaryDifficultyModifier[2] = 0.5
;legend
SalaryDifficultyModifier[3] = 1.0

;allowws you to set a supply cost for each officer training. off by default.
;MaterialTrainCost[0] = (\\
;ResourceCosts[0] = (ItemTemplateName="Supplies", Quantity = 1))
;
;MaterialTrainCost[1] = (\\
;ResourceCosts[0] = (ItemTemplateName="Supplies", Quantity = 2))
;
;MaterialTrainCost[2] = (\\
;ResourceCosts[0] = (ItemTemplateName="Supplies", Quantity = 2))
;
;MaterialTrainCost[3] = (\\
;ResourceCosts[0] = (ItemTemplateName="Supplies", Quantity = 2))
;
;AP cost for each training. it will try to use soldier AP is applicable, if not, will use xcom ap.
APTrainCost[0] = 10
APTrainCost[1] = 5
APTrainCost[2] = 5
APTrainCost[3] = 15

;difficulty modifier. This is multiplied by the normal AP Train cost. Non-integral results are rounded down.
;rookie
APCostDifficultyModifier[0] = 0.66
;veteran
APCostDifficultyModifier[1] = 0.66
;Commander
APCostDifficultyModifier[2] = 0.66
;legend
APCostDifficultyModifier[3] = 1.0


;adding eInvSlot_Unknown is not required. It will work if you omit it. I just put it here to demonstrate the correct format.
FreeAbilities[0] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_BattlefieldAnalysis", ApplyToWeaponSlot= eInvSlot_Unknown),\\
Abilities[1] = (AbilityName = "AbiziOTS_MakeItOut", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

AbilitiesToChoose[0] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_OfficerToolkit", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[1] = (AbilityName = "AbiziOTS_SneakyOfficer", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

;the first one used to be AbiziOTS_GoingDark but I replaced it with the better BuyTime ability.
FreeAbilities[1] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_BuyTime", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[1] = (AbilityName = "AbiziOTS_OscarMike", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[2] = (AbilityName = "AbiziOTS_FastCommand", ApplyToWeaponSlot = eInvSlot_Unknown),\\
Abilities[3] = (AbilityName = "AbiziOTS_QuickObservation", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

AbilitiesToChoose[1] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_Defilade", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[1] = (AbilityName = "AbiziOTS_GetSome", ApplyToWeaponSlot = eInvSlot_Unknown), \\
)

FreeAbilities[2] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_EmergencyCommand", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[1] = (AbilityName = "AbiziOTS_RevitalizeAlly", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[2] = (AbilityName = "AbiziOTS_SecondInCommand", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

AbilitiesToChoose[2] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_FireDiscipline", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[1] = (AbilityName = "AbiziOTS_FocusFire", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

FreeAbilities[3] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_CombinedArms", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

AbilitiesToChoose[3] = (\\
Abilities[0] = (AbilityName = "AbiziOTS_RopeMastery", ApplyToWeaponSlot = eInvSlot_Unknown), \\
Abilities[1] = (AbilityName = "AbiziOTS_LeadByExample", ApplyToWeaponSlot = eInvSlot_Unknown) \\
)

;this config variable controls whether or not two officers can bond. by default it's true, meaning they can't. Since normally it's impossible to take two officers on the same mission (by Rusty DSL configs), then bonding two officers is dumb.
blockInterOfficerBond = true
;this config variable controls if the tutorial pop up shows up. It should show up once in the game, after your second mission.
showTutorialPopup = true


;COVERT OPS INTEGRATION
;the following configs allows adding officer requirement to certain covert ops.
;by default, the 3 stages of Hunt the Chosen cover ops require levels 0/1/2 officer in them!
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_RevealChosenMovements", slotIdx = 0, MinOfficerLevel = 0)
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_RevealChosenStrengths", slotIdx = 0, MinOfficerLevel = 1)
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_RevealChosenStronghold", slotIdx = 0, MinOfficerLevel = 2)
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_CancelChosenActivity", slotIdx = 0, MinOfficerLevel = 1)

;mod support
;MOCX covert actions
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_MOCXOffsite", slotIdx = 0, MinOfficerLevel = 0)
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_MOCXTraining", slotIdx = 0, MinOfficerLevel = 1)
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_MOCXAssault", slotIdx = 0, MinOfficerLevel = 2)

;remove dark event from Grim Horizon Lite
+AddOfficerReqToCovertOp = (CovertopName = "CovertAction_PrepareDark", slotIdx = 0, MinOfficerLevel = 1)



;CI INTEGRATION - INFILTRATION
;uncomment to enable the following feature: starting from FL 5, all infiltration missions (hopefully, covered by the config below) will require any officer on them.
;The officer will be required in slot 1, which is the left most slot that is NOT optional.
;The reason it's commented - at my current state I can't make a nice ribbon box for the screen that will show this information, so if you don't read this you'll never know what you're missing.
;but if you do read this, and want this feature - please, uncomment!
;the last item is something... coming soon tbd maybe?
;the reason for FL limit - you can get infiltrations as early as two weeks in. It's more or less impossible to have an officer by this time, and forcing the player to skip these early missions is too harsh.

;MinForceLevel = 5
;+InfiltrationNamesToPatch = "CovertAction_DistractionInfiltrate"
;+InfiltrationNamesToPatch = "CovertAction_CaptureDVIP"
;+InfiltrationNamesToPatch = "CovertAction_IntelligenceInfiltrate"
;+InfiltrationNamesToPatch = "CovertAction_InformantInfiltrate"
;+InfiltrationNamesToPatch = "CovertAction_PersonnelRescue"
;+InfiltrationNamesToPatch = "CovertAction_AbiziDistractionInfiltrate"; :eyes: - this doesn't exist yet, no point uncommenting it.

;FORCE OFFICER REQUIREMENTS ON SOME MISSIONS WITH THIS CONFIG:
;chosen stronghold (two configurations)
+AddOfficerSitrepToMission = (MissionName = "ChosenStrongholdShort", MissionSType = "ChosenStrongholdShort", ReqOfficerLevel = 3)
+AddOfficerSitrepToMission = (MissionName = "ChosenStrongholdLong", MissionSType = "ChosenStrongholdLong", ReqOfficerLevel = 3)
;Leviathan
;on second thought, maybe not. This can soft lock your game if you finish network tower and don't have a max rank officer in the barracks...
;+AddOfficerSitrepToMission = (MissionName = "AssaultFortressLeadup", MissionSType = "GP_FortressLeadup", ReqOfficerLevel = 3)
;MOCX Storyline
+AddOfficerSitrepToMission = (MissionName = "Dark_RooftopsAssault", MissionSType = "Dark_RooftopsAssault", ReqOfficerLevel = 3)
+AddOfficerSitrepToMission = (MissionName = "Dark_TrainingRaid", MissionSType = "Dark_TrainingRaid", ReqOfficerLevel = 2)
+AddOfficerSitrepToMission = (MissionName = "Dark_OffsiteStorage", MissionSType = "Dark_OffsiteStorage", ReqOfficerLevel = 1)
;Blacksite
+AddOfficerSitrepToMission = (MissionName = "AdventFacilityBLACKSITE", MissionSType = "GP_Blacksite", ReqOfficerLevel = 0)
;Forge
+AddOfficerSitrepToMission = (MissionName = "AdventFacilityFORGE", MissionSType = "GP_Forge", ReqOfficerLevel = 1)
;Psigate
+AddOfficerSitrepToMission = (MissionName = "AdventFacilityPSIGATE", MissionSType = "GP_PsiGate", ReqOfficerLevel = 2)
;Facility, including RM's modded facility type, and "EVen More Robots" facility variant
+AddOfficerSitrepToMission = (MissionName = "SabotageAlienFacility", MissionSType = "Sabotage", ReqOfficerLevel = 1)
+AddOfficerSitrepToMission = (MissionName = "RM_Sabotage_Neutralize", MissionSType = "RM_Sabotage_Neutralize", ReqOfficerLevel = 1)
+AddOfficerSitrepToMission = (MissionName = "MRSabotageAlienFacility", MissionSType = "MRSabotageAlienFacility", ReqOfficerLevel = 1)
;Celatid Facility mission from Celatid mod
+AddOfficerSitrepToMission = (MissionName = "CelSabotageAlienFacility", MissionSType = "CelSabotageAlienFacility", ReqOfficerLevel = 1)


;MOD COMPATIBILITY CONFIGURATION OPTIONS
;AddCompatiblityRules is a struct of type ModCompatibilityOfficerData. It has the following fields:
;Action - Mandatory. Can be given one of three values  ModifyTrainingTime, BanFromOfficerTraining, CountAsAlternativeOfficer
;the rest of the fields are optional
;CharacterTemplateName - character template this rule will apply to (e.g., SparkSoldier)
;SoldierClassName - soldier class name this rule will apply to (e.g., Sharpshooter)
;AbilityName - required ability to have for this rule to apply. 
;UnitValueName - required unit value on the unit for this rule to apply. If this field is used, then the following is also necessary:
;RequiredUnitValue - if the value of the unit value is at least this number, the rule will apply.
;TrainingTimeModifier - multiplier on training time. Required if the action is ModifyTrainingTime
;CountAsOfficerRank - will make soldiers count as an officer of this level, ONLY for the purpose of covert ops/infiltrations/sitrep officer requirements. Only useful if the action is CountAsAlternativeOfficer
;
;for brevity, try to keep it "one instruction per line". If multiple rules apply to a given soldier, the best one will be picked.
;training time modifier will always make training shorter, you can't make it longer with this config.
;examples
;ban spark from training
;+AddCompatibilityRules = (Action = BanFromOfficerTraining, CharacterTemplateName = "SparkSoldier")
;use the "Battlefield Tactician" as a level 2 officer. If you PUT such a soldier into officer training, and bring them to level 3, then level 3 will be used. They will begin from level 0 as usual, and their abilities will use their "usual" officer level parameters, and not these. This ONLY counts for requirements for covert ops or missions.
;note that this doesn't prevent them from training normally and becoming "real" officers. If you want that, then you need to ban them with the BanOfficerFromTraining command.
;+AddCompatibilityRules = (Action = CountAsAlternativeOfficer, SoldierClassName = "AbiziOfficer", CountAsOfficerRank = 2)
;soldiers who had thier officer bondmate die can train faster
+AddCompatibilityRules = (Action = ModifyTrainingTime, UnitValueName = "AbiziOTS_OfficerBondmateDied", RequiredUnitValue = 1, TrainingTimeModifier = 0.75)
;this one handles the Born To Lead ability:
+AddCompatibilityRules = (Action = ModifyTrainingTime, AbilityName = "AbiziOTS_BornLeader", TrainingTimeModifier = 0.7)
;will prevent psionically gifted soldiers from Psi Overhaul V3 to become officers:
;AddCompatibilityRules = (Action = BanFromOfficerTraining, AbilityName = "TheGift")
;note that this won't work in reverse - an officer CAN be revealed to be psionically gifted. In this case, they won't be able to train anymore, but will be able to psi train. Do this at your own risk. 

;will prevent soldiers who had conditioning training from going on officer training. Again, in reverse it will work, so use at your own risk.
;+AddCompatibilityRules = (Action = BanFromOfficerTraining, UnitValueName = "TR_SoldierConditioning", RequiredUnitValue = 1)
