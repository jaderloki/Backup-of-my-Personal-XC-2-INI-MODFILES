[XComGame.X2AIBTBehaviorTree]
	
; -------------------- Civilian Militia AI BEHAVIOR TREE NODES BEGIN ------------




-Behaviors=(BehaviorName=CivilianMilitiaFirstActionSelector, NodeType=Selector, \\
	Child[0]=CivilianMilitiaMoveIfNeedCover, \\
	Child[1]=TryShootOrReload, \\
	Child[2]=MilitiaMoveTowardValidTargets, \\
	Child[3]=SkipMove)
-Behaviors=(BehaviorName=CivilianMilitiaLastActionSelector, NodeType=Selector, \\
	Child[0]=TryShootOrReload, \\
	Child[1]=SkipMove)

+Behaviors=(BehaviorName="CivilianMilitia::CharacterRoot", NodeType=Selector, Child[0]=CivilianMilitiaFirstAction, Child[1]=CivilianMilitiaLastAction, Child[2]=GenericAlertHandler)

+Behaviors=(BehaviorName=CivilianMilitiaFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CivilianMilitiaFirstActionSelector)
+Behaviors=(BehaviorName=CivilianMilitiaFirstActionSelector, NodeType=Selector, \\
	Child[0]=CivilianMilitiaMoveIfNeedCover, \\
	Child[1]=TryMoveThenGrenade, \\
	Child[2]=TryShootOrReloadOrOverwatch, \\
	Child[3]=TrySuppressClosest, \\
	Child[4]=MilitiaMoveTowardValidTargets, \\
	Child[5]=DoIfFlankedMove, \\
	Child[6]=SkipMove)


+Behaviors=(BehaviorName=CivilianMilitiaLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CivilianMilitiaLastActionSelector)
+Behaviors=(BehaviorName=CivilianMilitiaLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=SkipMove)


+Behaviors=(BehaviorName=MilitiaMoveTowardValidTargets, NodeType=Sequence, Child[0]=SelectPotentialTargetForMilitia, Child[1]=RestrictToPotentialTargetRange-StandardShot, Child[2]=FindDestinationWithLoS-MWP_Standard, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=SelectPotentialTargetForMilitia, NodeType=Sequence, Child[0]=SetPotentialTargetStack, Child[1]=SelectBestTargetForMilitia, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestTargetForMilitia, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMilitiaTarget)
+Behaviors=(BehaviorName=EvaluatePotentialMilitiaTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreIfWithinRange12, Child[2]=SSScoreTargetOutIfCivilian, Child[3]=TargetScoreByScaledDistance-1, Child[4]=ApplyDifficultyModifiers, Child[5]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetIsInMilitiaRange, NodeType=StatCondition, Param[0]=PotentialTargetDistance, Param[1]="<", Param[2]=12) 
+Behaviors=(BehaviorName=TargetScoreIfWithinRange12, NodeType=Selector, Child[0]=TargetScoreWithinRange12, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetScoreWithinRange12, NodeType=Sequence, Child[0]=TargetIsInMilitiaRange, Child[1]=AddToTargetScore_100)

+Behaviors=(BehaviorName=CivilianMilitiaMoveIfNeedCover, NodeType=Sequence, Child[0]=CheckIfNeedToMove, Child[1]=MoveDefensiveUnsafe)


;RESISTANCE MEC
+Behaviors=(BehaviorName="MILITIAResistanceMEC::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MILITIAMECRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MILITIAMECRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MILITIAMECRedAbilitySelector)
+Behaviors=(BehaviorName=MILITIAMECRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MILITIAMECRedFirstAction, Child[2]=MILITIAMECRedLastAction)

+Behaviors=(BehaviorName=MILITIAMECRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MILITIAMECFirstActionSelector)
+Behaviors=(BehaviorName=MILITIAMECFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveThenMicroMissiles, \\
	Child[1]=SelectNCMove_JobOrFanatic, \\
	Child[2]=HuntEnemy, \\
	Child[3]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=MILITIAMECRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MILITIAMECRedLastActionSelector)
+Behaviors=(BehaviorName=MILITIAMECRedLastActionSelector, NodeType=Selector,\\
	Child[0]=TryMicroMissiles, \\
	Child[1]=ShootOrSuppressIfNoGoodShot, \\
	Child[2]=HuntEnemy, \\
	Child[3]=SelectNCMove_JobOrFanatic, \\
	Child[4]=TryShootOrReloadOrOverwatch)
