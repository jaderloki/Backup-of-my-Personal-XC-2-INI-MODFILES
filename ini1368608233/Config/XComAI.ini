[XComGame.X2AIBTBehaviorTree]
; --- don't shoot if you're not an alien
; --- basically since non alien units don't really obey the objective target limits, never let them target the objective in the first place
-Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=HasPriorityTarget, Child[1]=AttackPriorityTarget)
+Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=IsTeam-eTeam_Alien, Child[1]=HasPriorityTarget, Child[2]=AttackPriorityTarget)

; ---------------- Custom AI behavior to find destination next to wounded / incapacitated ally  ----------------
+CustomNodes=(NodeTypeString="MarauderCondition", ExtendsFromType="Condition", ClassName="RaiderFactionMarauders.X2AIBTCondition_NoObjectiveBehavior")
+Behaviors=(BehaviorName=IsObjectiveUnitOrAnObject, NodeType=MarauderCondition)
+Behaviors=(BehaviorName=IsNotObjectiveUnitOrAnObject, NodeType=Inverter, Child[0]=IsObjectiveUnitOrAnObject)

;new shoot or reload or overwatch to avoid targeting civilians
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_Marauder, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_Marauder, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_Marauder, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_Marauder, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_Marauder, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_Marauder, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_Marauder, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_Marauder)
+Behaviors=(BehaviorName=GenericEvaluateTarget_Marauder, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_Marauder, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_Marauder, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=IsNotObjectiveUnitOrAnObject, Child[7]=AvoidBoundAndPanickedTargets)


+Behaviors=(BehaviorName="MarauderCleanserRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MarauderCleanser_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MarauderCleanser_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MarauderCleanser_RedAbilitySelector)
+Behaviors=(BehaviorName=MarauderCleanser_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MarauderCleanserRedFirstAction, Child[2]=MarauderCleanserRedLastAction)

+Behaviors=(BehaviorName=MarauderCleanserRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MarauderCleanserRedFirstActionSelector)
+Behaviors=(BehaviorName=MarauderCleanserRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=FlameThrowerIfPriorityTargets, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryShootOrReloadOrOverwatch_Marauder, \\
	Child[4]=SelectMoveProfileByJob, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MarauderCleanserRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MarauderCleanserRedLastActionSelector)
+Behaviors=(BehaviorName=MarauderCleanserRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=FlameThrowerIfPriorityTargets, \\
	Child[2]=TryShootOrReloadOrOverwatch_Marauder, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrAggressive)



+Behaviors=(BehaviorName="MarauderGuardianRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MarauderGuardian_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MarauderGuardian_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MarauderGuardian_RedAbilitySelector)
+Behaviors=(BehaviorName=MarauderGuardian_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MarauderGuardianRedFirstAction, Child[2]=MarauderGuardianRedLastAction)

+Behaviors=(BehaviorName=MarauderGuardianRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MarauderGuardianRedFirstActionSelector)
+Behaviors=(BehaviorName=MarauderGuardianRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryStasis, \\
	Child[2]=TryHolyWarrior, \\
	Child[3]=TryMoveThenGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_Marauder, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MarauderGuardianRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MarauderGuardianRedLastActionSelector)
+Behaviors=(BehaviorName=MarauderGuardianRedLastActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryStasis, \\
	Child[2]=TryHolyWarrior, \\
	Child[3]=TryMoveThenGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_Marauder, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=SelectMove_JobOrAggressive)



+Behaviors=(BehaviorName="MarauderRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=Marauder_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=Marauder_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=Marauder_RedAbilitySelector)
+Behaviors=(BehaviorName=Marauder_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MarauderRedFirstAction, Child[2]=MarauderRedLastAction)

+Behaviors=(BehaviorName=MarauderRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MarauderRedFirstActionSelector)
+Behaviors=(BehaviorName=MarauderRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TrySkirmGrapple, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=TryGrenade, \\
	Child[3]=TryWhiplash, \\
	Child[4]=TryJustice, \\
	Child[5]=TryMoveThenGrenadeAny, \\
	Child[6]=TryShootOrReloadOrOverwatch_Marauder, \\
	Child[7]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MarauderRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MarauderRedLastActionSelector)
+Behaviors=(BehaviorName=MarauderRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryWhiplash, \\
	Child[2]=TryJustice, \\
	Child[3]=TryGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_Marauder, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=SelectMove_JobOrAggressive)



+Behaviors=(BehaviorName=TrySkirmGrapple, NodeType=Sequence, Child[0]=IsAbilityAvailable-SkirmisherGrapple, Child[1]=FindSkirmGrappleDestination, Child[2]=SelectAbility-SkirmisherGrapple)
+Behaviors=(BehaviorName=FindSkirmGrappleDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-SkirmisherGrapple, Child[2]=OverridePreferredDestinationToSpawnLocation, Child[3]=RestrictToEnemyLoS, Child[4]=UseDashMovement, Child[5]=FindRestrictedDestination-MWP_GrappleOffense)
+Behaviors=(BehaviorName=RestrictToAbilityRange-SkirmisherGrapple, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-MWP_GrappleOffense, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-SkirmisherGrapple, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SkirmisherGrapple, NodeType=Action, param[0]=UseDestination)


;Whiplash
+Behaviors=(BehaviorName=TryWhiplash, NodeType=Sequence, Child[0]=IsAbilityAvailable-Whiplash, Child[1]=SelectTargetForWhiplash, Child[2]=SelectAbility-Whiplash) 
+Behaviors=(BehaviorName=IsAbilityAvailable-Whiplash, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForWhiplash, NodeType=Sequence, Child[0]=SetTargetStack-Whiplash, Child[1]=IterateTargetsForWhiplash, Child[2]=HasValidTarget-Whiplash)
+Behaviors=(BehaviorName=SetTargetStack-Whiplash, NodeType=Action)
+Behaviors=(BehaviorName=IterateTargetsForWhiplash, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForWhiplash)
+Behaviors=(BehaviorName=IterateNextTargetForWhiplash, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForWhiplash, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSEvaluateForWhiplash, NodeType=Successor, Child[0]=EvaluateForWhiplash)
+Behaviors=(BehaviorName=EvaluateForWhiplash, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=TargetIsAttackable, NodeType=Inverter, Child[0]=TargetIsNotAttackable)
+Behaviors=(BehaviorName=HasValidTarget-Whiplash, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Whiplash, NodeType=Action)
+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)


;Justice
+Behaviors=(BehaviorName=TryJustice, NodeType=Sequence, Child[0]=IsAbilityAvailable-Justice, Child[1]=SelectTargetForJustice, Child[2]=SelectAbility-Justice) 
+Behaviors=(BehaviorName=IsAbilityAvailable-Justice, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForJustice, NodeType=Sequence, Child[0]=SetTargetStack-Justice, Child[1]=IterateTargetsForJustice, Child[2]=HasValidTarget-Justice)
+Behaviors=(BehaviorName=SetTargetStack-Justice, NodeType=Action)
+Behaviors=(BehaviorName=IterateTargetsForJustice, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForJustice)
+Behaviors=(BehaviorName=IterateNextTargetForJustice, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForJustice, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSEvaluateForJustice, NodeType=Successor, Child[0]=EvaluateForJustice)
+Behaviors=(BehaviorName=EvaluateForJustice, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=TargetIsAttackable, NodeType=Inverter, Child[0]=TargetIsNotAttackable)
+Behaviors=(BehaviorName=HasValidTarget-Justice, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Justice, NodeType=Action)
+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)



; scarred one
+Behaviors=(BehaviorName=ScarredMoveOrShoot, NodeType=Selector,  Child[0]=ShootIfAvailable_Marauder, Child[1]=NeedsReload, Child[2]=MoveAggressive)