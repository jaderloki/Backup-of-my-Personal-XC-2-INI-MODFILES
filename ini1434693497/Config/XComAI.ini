[XComGame.XGAIBehavior]
+AoEProfiles=(Profile=RogueMedicSmokeGrenadeProfile, Ability=ThrowGrenade, bTargetEnemy=0, bTargetAllies=1, bTargetSelf=1, bUsePrecomputePath=1, MinTargets=3)
+AoEProfiles=( Profile=RocketLauncherProfile_prio, Ability=RocketLauncher, bUsePrecomputePath=1, bFailOnFriendlyFire=1, bRequireLos=1)
+AoEProfiles=( Profile=RocketLauncherProfile_norm, Ability=RocketLauncher, bUsePrecomputePath=1, bRequireLos=1) 
+AoEProfiles=( Profile=RocketLauncherProfile_aggro, Ability=RocketLauncher, bUsePrecomputePath=1, MinTargets=1, bRequireLos=1) 

+AoEProfiles=( Profile=RogueCollateralDamage, Ability=RogueCollateralDamage, bUsePrecomputePath=1, MinTargets=1, bRequireLos=1) 

+m_arrMoveWeightProfile=(Profile=RM_FanaticRunAndGun, fCoverWeight=0.5f, fDistanceWeight=5.0f, fFlankingWeight=5.0f, fEnemyVisWeight=0.0f, fEnemyVisWeightPeak1=3.0, fAllyVisWeight=0.5f, fCloseModifier=1.1f, fFarModifier=0.9f)  


[XComGame.X2AIBTBehaviorTree]
; --- don't shoot if you're not an alien
; --- basically since non alien units don't really obey the objective target limits, never let them target the objective in the first place
-Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=HasPriorityTarget, Child[1]=AttackPriorityTarget)
+Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=IsTeam-eTeam_Alien, Child[1]=HasPriorityTarget, Child[2]=AttackPriorityTarget)


+CustomNodes=(NodeTypeString="RogueXComCondition", ExtendsFromType="Condition", ClassName="RaiderFactionRogueXCOM.X2AIBTCondition_NoObjectiveBehavior")
+Behaviors=(BehaviorName=IsObjectiveUnitOrAnObject, NodeType=RogueXComCondition)
+Behaviors=(BehaviorName=IsNotObjectiveUnitOrAnObject, NodeType=Inverter, Child[0]=IsObjectiveUnitOrAnObject)

+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)
+Behaviors=(BehaviorName=TargetNotTeamXCom, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_XCom)
+Behaviors=(BehaviorName=IsTargetTeam-eTeam_XCom, NodeType=Condition)
;-------------- High priority target shooting (shoot if kill or target flanked/exposed) ------------- FOR SNIPERS
+Behaviors=(BehaviorName=TryHighPriorityShot_Sniper_RogueXCom, NodeType=Sequence, Child[0]=IsAbilityAvailable-SniperStandardFire, Child[1]=HaveHighPriorityTarget_Sniper_RogueXCom, Child[2]=SnipeIfAvailable)
+Behaviors=(BehaviorName=HaveHighPriorityTarget_Sniper_RogueXCom, NodeType=Sequence, Child[0]=SetTargetStack-SniperStandardFire, Child[1]=FindHighPriorityTarget, Child[2]=HasValidTarget-SniperStandardFire)

+Behaviors=(BehaviorName=FindDestinationWithLoS-RM_FanaticRunAndGun, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-RM_FanaticRunAndGun, NodeType=Action)
+Behaviors=(BehaviorName=FindDestination-RM_FanaticRunAndGun, NodeType=Action)
; -------------- High priority target shooting (shoot if kill or target flanked/exposed) -------------
+Behaviors=(BehaviorName=TryHighPriorityShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=HaveHighPriorityTarget, Child[2]=ShootIfAvailable)
+Behaviors=(BehaviorName=HaveHighPriorityTarget, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=FindHighPriorityTarget, Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=FindHighPriorityTarget, NodeType=RepeatUntilFail, Child[0]=NotHighPriorityEvaluateTarget)
+Behaviors=(BehaviorName=NotHighPriorityEvaluateTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsNotHighPriority)
+Behaviors=(BehaviorName=TargetIsNotHighPriority, NodeType=Inverter, Child[0]=TargetIsHighPriority)
+Behaviors=(BehaviorName=TargetIsHighPriority, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetNotTeamXCom, Child[3]=TargetKillableOrFlanked, Child[4]=IsNotObjectiveUnitOrAnObject, Child[5]=AddToTargetScore_1000, Child[6]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetKillableOrFlanked, NodeType=Selector, Child[0]=TargetIsKillable,  Child[1]=IsFlankingTarget)

; Hit Chance based Conditions
+Behaviors=(BehaviorName=AllHitChancesBelow10, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="10")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow10, NodeType=Inverter, Child[0]=AllHitChancesBelow10)
+Behaviors=(BehaviorName=AllHitChancesBelow25, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="25")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow25, NodeType=Inverter, Child[0]=AllHitChancesBelow25)
+Behaviors=(BehaviorName=AllHitChancesBelow50, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="50")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow50, NodeType=Inverter, Child[0]=AllHitChancesBelow50)
+Behaviors=(BehaviorName=AllHitChancesBelow75, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="75")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow75, NodeType=Inverter, Child[0]=AllHitChancesBelow75)
+Behaviors=(BehaviorName=AllHitChancesBelow90, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="90")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow90, NodeType=Inverter, Child[0]=AllHitChancesBelow90)

;new shoot or reload or overwatch to avoid targeting civilians
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_RogueXCom_Sniper, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_RogueXCom_Sniper, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_RogueXCom_Sniper, NodeType=Sequence, Child[0]=IsAbilityAvailable-SniperStandardFire, Child[1]=SelectTargetForSniperStandardFire_RogueXCom, Child[2]=SelectAbility-SniperStandardFire)
+Behaviors=(BehaviorName=IsAbilityAvailable-SniperStandardFire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForSniperStandardFire_RogueXCom, NodeType=Sequence, Child[0]=SetTargetStack-SniperStandardFire, Child[1]=GenericSelectBestTarget_RogueXCom, Child[2]=HasValidTarget-SniperStandardFire)
+Behaviors=(BehaviorName=SelectAbility-SniperStandardFire, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-SniperStandardFire, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-SniperStandardFire, NodeType=Condition)

+Behaviors=(BehaviorName=PistolIfAvailable_RogueXCom, NodeType=Sequence, Child[0]=IsAbilityAvailable-PistolStandardShot, Child[1]=SelectTargetForPistol_RogueXCom, Child[2]=SelectAbility-PistolStandardShot)
+Behaviors=(BehaviorName=SelectTargetForPistol_RogueXCom, NodeType=Sequence, Child[0]=SetTargetStack-PistolStandardShot, Child[1]=GenericSelectBestTarget_RogueXCom, Child[2]=HasValidTarget-PistolStandardShot)

+Behaviors=(BehaviorName=TryRogueXComSniper, NodeType=RandSelector,      Child[0]=TryShootOrReloadOrOverwatch_RogueXCom_Sniper, Param[0]=60,      Child[1]=PistolIfAvailable_RogueXCom, Param[1]=40)

+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_RogueXCom, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_RogueXCom, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_RogueXCom, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_RogueXCom, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_RogueXCom, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_RogueXCom, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_RogueXCom, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_RogueXCom)
+Behaviors=(BehaviorName=GenericEvaluateTarget_RogueXCom, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_RogueXCom, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_RogueXCom, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=TargetScoreLowerXCom, Child[7]=IsNotObjectiveUnitOrAnObject, Child[8]=AvoidBoundAndPanickedTargets)
+Behaviors=(BehaviorName=TargetScoreLowerXCom, NodeType=Selector, Child[0]=ScoreTargetIfXCOM, Child[1]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreTargetIfXCOM, NodeType=Sequence, Child[0]=IsTeam-eTeam_XCom, Child[1]=AddToTargetScore_-100)

; +++ Grenades and other Explosives
; ++ Throw single target grenade when only bad shots (<50%) available
+Behaviors=(BehaviorName=TryGrenadeSingle, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-GrenadeSingleProfile, Child[2]=SelectAoETarget-GrenadeSingleProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TryGrenadeSingleOnBadShot, NodeType=Sequence, Child[0]=AllHitChancesBelow50, Child[1]=IsAbilityAvailable-ThrowGrenade, Child[2]=FindPotentialAoETargets-GrenadeSingleProfile, Child[3]=SelectAoETarget-GrenadeSingleProfile, Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TryGrenade_Aggressive, NodeType=Selector, Child[0]=TryGrenade, Child[1]=TryGrenadeSingleOnBadShot)
+Behaviors=(BehaviorName=TryGrenade_JustHitSomething, NodeType=Selector, Child[0]=TryGrenade, Child[1]=TryGrenadeSingle)
; ++ Rocket Launcher
+Behaviors=(BehaviorName=TryRocketLauncher_prio, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RocketLauncherProfile_prio, Child[2]=SelectAoETarget-RocketLauncherProfile_prio, Child[3]=SelectAbility-RocketLauncher)
+Behaviors=(BehaviorName=TryRocketLauncher_norm, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RocketLauncherProfile_norm, Child[2]=SelectAoETarget-RocketLauncherProfile_norm, Child[3]=SelectAbility-RocketLauncher)
+Behaviors=(BehaviorName=TryRocketLauncher_aggro, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RocketLauncherProfile_aggro, Child[2]=SelectAoETarget-RocketLauncherProfile_aggro, Child[3]=SelectAbility-RocketLauncher)
; ++ Grenade Launcher
+Behaviors=(BehaviorName=TryGrenadeLauncher_prio, NodeType=Sequence, Child[0]=IsAbilityAvailable-LaunchGrenade, Child[1]=FindPotentialAoETargets-GrenadeLauncherProfile_prio, Child[2]=SelectAoETarget-GrenadeLauncherProfile_prio, Child[3]=SelectAbility-LaunchGrenade)
+Behaviors=(BehaviorName=TryGrenadeLauncher_norm, NodeType=Sequence, Child[0]=IsAbilityAvailable-LaunchGrenade, Child[1]=FindPotentialAoETargets-GrenadeLauncherProfile_norm, Child[2]=SelectAoETarget-GrenadeLauncherProfile_norm, Child[3]=SelectAbility-LaunchGrenade)
+Behaviors=(BehaviorName=TryGrenadeLauncher_aggro, NodeType=Sequence, Child[0]=IsAbilityAvailable-LaunchGrenade, Child[1]=FindPotentialAoETargets-GrenadeLauncherProfile_aggro, Child[2]=SelectAoETarget-GrenadeLauncherProfile_aggro, Child[3]=SelectAbility-LaunchGrenade)
; ++ Merging RocketLauncher, Grenadelauncher and Grenade(aggressive) into one Behavior
+Behaviors=(BehaviorName=TryRogueExplosive_prio, NodeType=Selector, Child[0]=TryRocketLauncher_prio, Child[1]=TryGrenadeLauncher_prio) 
+Behaviors=(BehaviorName=TryRogueExplosive_norm, NodeType=Selector, Child[0]=TryRocketLauncher_norm, Child[1]=TryGrenadeLauncher_norm, Child[2]=TryGrenade) 
+Behaviors=(BehaviorName=TryRogueExplosive_aggro, NodeType=Selector, Child[0]=TryRocketLauncher_aggro, Child[1]=TryGrenadeLauncher_aggro, Child[2]=TryGrenade_Aggressive) 
+Behaviors=(BehaviorName=TryRogueExplosive_JustHitSomething, NodeType=Selector, Child[0]=TryRocketLauncher_aggro, Child[1]=TryGrenadeLauncher_aggro, Child[2]=TryGrenade_JustHitSomething) 

; ---------------- Do shorthand for our new abilities ----------------
+EquivalentAbilities=(KeyName=RogueMedikit, EquivalentAbilityName[0]=MedikitHeal, EquivalentAbilityName[1]=NanoMedikitHeal)


; ---------------- Rogue XCom Support AI ----------------
+Behaviors=(BehaviorName="RogueXComSupportRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RogueMedic_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=RogueMedic_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RogueMedic_RedAbilitySelector)
+Behaviors=(BehaviorName=RogueMedic_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RogueMedicFirstAction, Child[2]=RogueMedicLastAction)
+Behaviors=(BehaviorName=RogueMedicFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RogueMedicFirstActionSelector)
+Behaviors=(BehaviorName=RogueMedicLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RogueMedicLastActionSelector)
+Behaviors=(BehaviorName=RogueMedicFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryRogueMedikitOnTarget, \\
	Child[1]=RogueMedicMoveTowardTroubled, \\
	Child[2]=TryMedicMoveDefensive, \\
	Child[3]=TryRogueMedicSmokeGrenade, \\
	Child[4]=ShootIfIdeal, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RogueMedicLastActionSelector, NodeType=Selector, \\
	Child[0]=TryRogueMedikitOnTarget, \\
	Child[1]=TryRogueMedicSmokeGrenade, \\
	Child[2]=ShootIfIdeal, \\
	Child[3]=RogueMedicMoveTowardTroubled, \\
	Child[4]=ShootOrSuppressIfNoGoodShot_RogueXCom, \\
	Child[5]=TryMedicMoveDefensive, \\
	Child[6]=HuntEnemyWithCover)


; ---------------- AdventMedic support behaviours ----------------
+Behaviors=(BehaviorName=SelectAoETarget-RogueMedicSmokeGrenadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RogueMedicSmokeGrenadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=TryMedicMoveDefensive, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MoveDefensive)

+Behaviors=(BehaviorName=IsAbilityAvailable-RogueMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RogueMedikit, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-RogueMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-RogueMedikit, NodeType=Action)
+Behaviors=(BehaviorName=TargetIsInjured, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="60%")
+Behaviors=(BehaviorName=TargetIsUnableToMove, NodeType=TargetStatCondition, Param[0]=ActionPoints, Param[1]="==", Param[2]="0")


; ---------------- Custom AI behavior to find destination next to wounded / incapacitated ally  ----------------
+CustomNodes=(NodeTypeString="RogueXComMedicAction", ExtendsFromType="Action", ClassName="RaiderFactionRogueXCOM.X2AIBTActions_MedicBehavior")
+Behaviors=(BehaviorName=SetDestinationNextToRogueInTroubleTeammate, NodeType=RogueXComMedicAction)
; ---------------- Advent Medic movement behaviours -- find a spot near wounded / incapacitated ally ----------------
+Behaviors=(BehaviorName=RogueMedicMoveTowardTroubled, NodeType=Selector, Child[0]=RogueMedicMoveToTroubled)
+Behaviors=(BehaviorName=RogueMedicMoveToTroubled, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=SetDestinationNextToRogueInTroubleTeammate, Child[2]=SelectAbility-StandardMove)


; ---------------- RogueMedikit targeting behaviours -- target wounded ally or the medic ---------------- 
+Behaviors=(BehaviorName=TryRogueMedikitOnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-RogueMedikit, Child[1]=SelectTargetForRogueMedikit, Child[2]=SelectAbility-RogueMedikit)
+Behaviors=(BehaviorName=SelectTargetForRogueMedikit, NodeType=Sequence, Child[0]=SetTargetStack-RogueMedikit, Child[1]=SelectBestTargetForRogueMedikit, Child[2]=HasValidTarget-RogueMedikit)
+Behaviors=(BehaviorName=SelectBestTargetForRogueMedikit, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsRogueMedikit)
+Behaviors=(BehaviorName=EvaluateTargetsRogueMedikit, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsInjured, Child[2]=TargetScoreNonMedic, Child[3]=TargetScoreHealth, Child[4]=UpdateBestTarget)


; ---------------- We want the medic to prioritise others over himself when healing  ---------------- 
+Behaviors=(BehaviorName=TargetScoreNonMedic, NodeType=Selector, Child[0]=ScoreIfNotMedic, Child[1]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreIfNotMedic, NodeType=Sequence, Child[0]=TargetIsNotMedic, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=TargetIsNotMedic, NodeType=Inverter, Child[0]=TargetIsRogueMedic)
+Behaviors=(BehaviorName=TargetIsRogueMedic, NodeType=Selector, Child[0]=TargetTemplateNameIs-XComSupport_M1, Child[1]=TargetTemplateNameIs-XComSupport_M2, Child[2]=TargetTemplateNameIs-XComSupport_M3)
+Behaviors=(BehaviorName=TargetTemplateNameIs-XComSupport_M1, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-XComSupport_M2, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-XComSupport_M3, NodeType=Condition)


; ---------------- Smoke grenade behaviours -- turns out they do work and I'm just a muppet - thanks to ADVENT Avenger for helping with this ----------------
+Behaviors=(BehaviorName=TryRogueMedicSmokeGrenade, NodeType=Selector, Child[0]=TryRogueMedicSmokeGrenadeOnGroup, Child[1]=TryRogueMedicSmokeGrenadeOnTarget)
+Behaviors=(BehaviorName=TryRogueMedicSmokeGrenadeOnGroup, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-RogueMedicSmokeGrenadeProfile, Child[2]=SelectAoETarget-RogueMedicSmokeGrenadeProfile, Child[3]=SelectAbility-ThrowGrenade)

+Behaviors=(BehaviorName=TryRogueMedicSmokeGrenadeOnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=SelectTargetForRogueMedicSmokeGrenade, Child[2]=FindPotentialAoETargets-GrenadePanickedProfile, Child[3]=SelectAoETarget-GrenadePanickedProfile, Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=SelectTargetForRogueMedicSmokeGrenade, NodeType=Sequence, Child[0]=SetPotentialAllyTargetStack, Child[1]=SelectBestTargetForRogueMedicSmokeGrenade, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestTargetForRogueMedicSmokeGrenade, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsRogueMedicSmokeGrenade)
+Behaviors=(BehaviorName=EvaluateTargetsRogueMedicSmokeGrenade, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScorePossibleDanger, Child[2]=UpdateBestTarget)


; ---------------- Aside from the group smoke cover, we want to target allies who are suppressed, or close to dying and will not move  ---------------- 
+Behaviors=(BehaviorName=TargetScorePossibleDanger, NodeType=Selector, Child[0]=ScoreIfSuppressed, Child[1]=ScoreIfKillable, Child[2]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreIfSuppressed, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Suppression, Child[1]=AddToTargetScore_20)
+Behaviors=(BehaviorName=ScoreIfKillable, NodeType=Sequence, Child[0]=TargetIsUnableToMove, Child[1]=TargetIsVulnerable, Child[2]=AddToTargetScore_10)


; ---------------- Rogue XCom Sniper AI ----------------
+Behaviors=(BehaviorName="RogueXcomSniperRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RogueXComSniper_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=RogueXComSniper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RogueXComSniper_RedAbilitySelector)
+Behaviors=(BehaviorName=RogueXComSniper_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RogueXComSniperRedFirstAction, Child[2]=RogueXComSniperRedLastAction)

+Behaviors=(BehaviorName=RogueXComSniperRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RogueXComSniperRedFirstActionSelector)
+Behaviors=(BehaviorName=RogueXComSniperRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryHighPriorityShot_Sniper_RogueXCom, \\
	Child[2]=TryShootOrReloadOrOverwatch_RogueXCom_Sniper, \\
	Child[3]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RogueXComSniperRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RogueXComSniperRedLastActionSelector)
+Behaviors=(BehaviorName=RogueXComSniperRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryHighPriorityShot_Sniper_RogueXCom, \\
	Child[1]=PistolIfAvailable_RogueXCom, \\
	Child[2]=TryShootOrReloadOrOverwatch_RogueXCom_Sniper, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrAggressive)

+Behaviors=(BehaviorName=PistolIfAvailable_RogueXCom, NodeType=Sequence, Child[0]=IsAbilityAvailable-PistolStandardShot, Child[1]=SelectTargetForPistol_RogueXCom, Child[2]=SelectAbility-PistolStandardShot)
+Behaviors=(BehaviorName=SelectTargetForPistol_RogueXCom, NodeType=Sequence, Child[0]=SetTargetStack-PistolStandardShot, Child[1]=GenericSelectBestTarget_RogueXCom, Child[2]=HasValidTarget-PistolStandardShot)


; ---------------- Rogue XCom Heavy AI ----------------
+Behaviors=(BehaviorName="RogueXcomHeavyRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RogueXComHeavy_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=RogueXComHeavy_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RogueXComHeavy_RedAbilitySelector)
+Behaviors=(BehaviorName=RogueXComHeavy_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RogueXComHeavyRedFirstAction, Child[2]=RogueXComHeavyRedLastAction)

+Behaviors=(BehaviorName=RogueXComHeavyRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RogueXComHeavyRedFirstActionSelector)
+Behaviors=(BehaviorName=RogueXComHeavyRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryRogueExplosive_prio, \\
	Child[2]=TryShootOrReloadOrOverwatch_RogueXCom, \\
	Child[3]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RogueXComHeavyRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RogueXComHeavyRedLastActionSelector)
+Behaviors=(BehaviorName=RogueXComHeavyRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryRogueExplosive_aggro, \\
	Child[1]=TryShootOrReloadOrOverwatch_RogueXCom, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)

; + Rocket Launcher
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherProfile_prio, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherProfile_norm, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherProfile_aggro, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherProfile_prio, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherProfile_norm, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherProfile_aggro, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-RocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RocketLauncher, NodeType=Action)

; + Grenade, single target
+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeSingleProfile, NodeType=Action)
; + Grenade Launcher

+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherProfile_prio, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherProfile_norm, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherProfile_aggro, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherProfile_prio, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherProfile_norm, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherProfile_aggro, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-LaunchGrenade, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LaunchGrenade, NodeType=Action)
+Behaviors=(BehaviorName=MaybeHunker10, NodeType=RandFilter, Child[0]=TryCower, Param[0]=10)
+Behaviors=(BehaviorName=MaybeHunker25, NodeType=RandFilter, Child[0]=TryCower, Param[0]=25)
+Behaviors=(BehaviorName=MaybeHunker50, NodeType=RandFilter, Child[0]=TryCower, Param[0]=50)
+Behaviors=(BehaviorName=MaybeHunker75, NodeType=RandFilter, Child[0]=TryCower, Param[0]=75)
+Behaviors=(BehaviorName=MaybeHunker90, NodeType=RandFilter, Child[0]=TryCower, Param[0]=90)

+Behaviors=(BehaviorName=DoCowerNoAnim, NodeType=Sequence, Child[0]=IsAbilityAvailable-HunkerDownNoAnim, Child[1]=SelectAbility-HunkerDownNoAnim)
+Behaviors=(BehaviorName=TryCower, NodeType=Selector, Child[0]=DoCower, Child[1]=DoCowerNoAnim)
+Behaviors=(BehaviorName=IsAbilityAvailable-HunkerDownNoAnim, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HunkerDownNoAnim, NodeType=Action)


; ---------------- Rogue XCom Assault AI ----------------
+Behaviors=(BehaviorName="RogueXcomAssaultRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RogueXComAssault_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=RogueXComAssault_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RogueXComAssault_RedAbilitySelector)
+Behaviors=(BehaviorName=RogueXComAssault_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RogueXComAssaultRedFirstAction, Child[2]=RogueXComAssaultRedLastAction)

+Behaviors=(BehaviorName=RogueXComAssaultRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RogueXComAssaultRedFirstActionSelector)
+Behaviors=(BehaviorName=RogueXComAssaultRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryRunAndGun, \\
	Child[2]=TryRaGDash, \\
	Child[3]=TryRapidFire_RogueXCom, \\
	Child[4]=TryMoveThenGrenade, \\
	Child[5]=TryShootOrReloadOrOverwatch_RogueXCom, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RogueXComAssaultRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RogueXComAssaultRedLastActionSelector)
+Behaviors=(BehaviorName=RogueXComAssaultRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryRaGDash, \\
	Child[1]=TryGrenade, \\
	Child[2]=TryRapidFire_RogueXCom, \\
	Child[3]=TryShootOrReloadOrOverwatch_RogueXCom, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrAggressive)

; + Run And Gun
+Behaviors=(BehaviorName=TryRunAndGun, NodeType=Sequence, Child[0]=IsAbilityAvailable-RunAndGun, Child[1]=SelectAbility-RunAndGun)
+Behaviors=(BehaviorName=IsAbilityAvailable-RunAndGun, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RunAndGun, NodeType=Action)

+Behaviors=(BehaviorName=TryRaGDash, NodeType=Sequence, Child[0]=WasLastAbility-RunAndGun, Child[1]=RM_MoveFlankingUnsafe)
+Behaviors=(BehaviorName=WasLastAbility-RunAndGun, NodeType=Condition)
+Behaviors=(BehaviorName=RM_MoveFlankingUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindDestination-RM_FanaticRunAndGun, Child[3]=SelectAbility-StandardMove)

; + Rapid Fire
+Behaviors=(BehaviorName=TryRapidFire_RogueXCom, NodeType=Sequence, Child[0]=IsAbilityAvailable-RapidFire, Child[1]=SelectTargetForRapidFireRogueXCom, Child[2]=SelectAbility-RapidFire) 
+Behaviors=(BehaviorName=SelectTargetForRapidFireRogueXCom, NodeType=Sequence, Child[0]=SetTargetStack-RapidFire, Child[1]=GenericSelectBestTarget_RogueXCom, Child[2]=HasValidTarget-RapidFire) 

+Behaviors=(BehaviorName=SelectAbility-RapidFire, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-RapidFire, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-RapidFire, NodeType=Condition)
+Behaviors=(BehaviorName=HasValidTarget-RapidFire, NodeType=Condition)



; ROGUE XCOM SHIV AI

+Behaviors=(BehaviorName="RogueXComShivRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RogueSHIV_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=RogueSHIV_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RogueSHIVRedAbilitySelector)
+Behaviors=(BehaviorName=RogueSHIVRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RogueSHIVRedFirstAction, Child[2]=RogueSHIVRedLastAction)

+Behaviors=(BehaviorName=RogueSHIVRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RogueSHIVFirstActionSelector)
+Behaviors=(BehaviorName=RogueSHIVFirstActionSelector, NodeType=Selector, \\
	Child[0]=SelectNCMove_JobOrFanatic, \\
	Child[1]=HuntEnemy, \\
	Child[2]=TryShootOrReloadOrOverwatch_RogueXCom)

+Behaviors=(BehaviorName=RogueSHIVRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RogueSHIVRedLastActionSelector)
+Behaviors=(BehaviorName=RogueSHIVRedLastActionSelector, NodeType=Selector,\\
	Child[0]=ShootOrSuppressIfNoGoodShot_RogueXCom, \\
	Child[1]=HuntEnemy, \\
	Child[2]=SelectNCMove_JobOrFanatic, \\
	Child[3]=TryShootOrReloadOrOverwatch_RogueXCom)

+Behaviors=(BehaviorName=ShootOrSuppressIfNoGoodShot_RogueXCom, NodeType=Selector, Child[0]=ConsiderSuppression_RogueXCom, Child[1]=TryShootOrReloadOrOverwatch_RogueXCom)
+Behaviors=(BehaviorName=ConsiderSuppression_RogueXCom, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=SuppressIfAvailable)

; ROGUE XCOM MEC

+Behaviors=(BehaviorName="RogueXComMecRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RogueMec_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=RogueMec_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RogueMecRedAbilitySelector)
+Behaviors=(BehaviorName=RogueMecRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RogueMecRedFirstAction, Child[2]=RogueMecRedLastAction)

+Behaviors=(BehaviorName=RogueMecRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RogueMecFirstActionSelector)
+Behaviors=(BehaviorName=RogueMecFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveForMicroMissiles, \\
	Child[1]=SelectNCMove_JobOrFanatic, \\
	Child[2]=HuntEnemy, \\
	Child[3]=TryShootOrReloadOrOverwatch_RogueXCom)

+Behaviors=(BehaviorName=RogueMecRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RogueMecRedLastActionSelector)
+Behaviors=(BehaviorName=RogueMecRedLastActionSelector, NodeType=Selector,\\
	Child[0]=TryMicroMissiles, \\
	Child[1]=TryRogueCollateralDamage, \\
	Child[2]=ShootOrSuppressIfNoGoodShot_RogueXCom, \\
	Child[3]=HuntEnemy, \\
	Child[4]=SelectNCMove_JobOrFanatic, \\
	Child[5]=TryShootOrReloadOrOverwatch_RogueXCom)

+Behaviors=(BehaviorName=ShootOrSuppressIfNoGoodShot_RogueXCom, NodeType=Selector, Child[0]=ConsiderSuppression_RogueXCom, Child[1]=TryShootOrReloadOrOverwatch_RogueXCom)
+Behaviors=(BehaviorName=ConsiderSuppression_RogueXCom, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=SuppressIfAvailable)

+Behaviors=(BehaviorName=TryRogueCollateralDamage, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RogueCollateralDamage, Child[2]=SelectAoETarget-RogueCollateralDamage, Child[3]=SelectAbility-RogueCollateralDamage)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RogueCollateralDamage, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RogueCollateralDamage, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-RogueCollateralDamage, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RogueCollateralDamage, NodeType=Action)
