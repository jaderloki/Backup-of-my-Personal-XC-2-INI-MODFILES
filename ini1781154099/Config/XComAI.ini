[XComGame.X2AIBTBehaviorTree]
; --- don't shoot if you're not an alien
; --- basically since non alien units don't really obey the objective target limits, never let them target the objective in the first place
-Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=HasPriorityTarget, Child[1]=AttackPriorityTarget)
+Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=IsTeam-eTeam_Alien, Child[1]=HasPriorityTarget, Child[2]=AttackPriorityTarget)



+CustomNodes=(NodeTypeString="ChaosCondition", ExtendsFromType="Condition", ClassName="ChaosInsurgencyIntrusion.X2AIBTCondition_NoObjectiveBehavior")
+Behaviors=(BehaviorName=IsObjectiveUnitOrAnObject, NodeType=ChaosCondition)
+Behaviors=(BehaviorName=IsNotObjectiveUnitOrAnObject, NodeType=Inverter, Child[0]=IsObjectiveUnitOrAnObject)



+Behaviors=(BehaviorName=TryHighPriorityShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=HaveHighPriorityTarget, Child[2]=ShootIfAvailable)
+Behaviors=(BehaviorName=HaveHighPriorityTarget, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=FindHighPriorityTarget, Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=FindHighPriorityTarget, NodeType=RepeatUntilFail, Child[0]=NotHighPriorityEvaluateTarget)
+Behaviors=(BehaviorName=NotHighPriorityEvaluateTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsNotHighPriority)
+Behaviors=(BehaviorName=TargetIsNotHighPriority, NodeType=Inverter, Child[0]=TargetIsHighPriority)
+Behaviors=(BehaviorName=TargetIsHighPriority, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetKillableOrFlanked, Child[2]=IsNotObjectiveUnitOrAnObject, Child[3]=AddToTargetScore_1000, Child[4]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetKillableOrFlanked, NodeType=Selector, Child[0]=TargetIsKillable,  Child[1]=IsFlankingTarget)

;new shoot or reload or overwatch to avoid targeting civilians
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_Chaos, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_Chaos, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_Chaos, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_Chaos, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_Chaos, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_Chaos, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_Chaos, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_Chaos)
+Behaviors=(BehaviorName=GenericEvaluateTarget_Chaos, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_Chaos, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_Chaos, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=IsNotObjectiveUnitOrAnObject, Child[7]=AvoidBoundAndPanickedTargets)


+Behaviors=(BehaviorName="ChaosRecruitRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChaosGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="ChaosMikeRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChaosMike_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="ChaosHuninRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChaosPsion_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=ChaosGeneric_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChaosGeneric_RedAbilitySelector)
+Behaviors=(BehaviorName=ChaosGeneric_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChaosGenericRedFirstAction, Child[2]=ChaosGenericRedLastAction)

+Behaviors=(BehaviorName=ChaosGenericRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChaosGenericRedFirstActionSelector)
+Behaviors=(BehaviorName=ChaosGenericRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryChaosPsiheal, \\
	Child[3]=TryPhantomVanish, \\
	Child[4]=TryMoveThenGrenadeAny, \\
	Child[5]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[6]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=ChaosGenericRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChaosGenericRedLastActionSelector)
+Behaviors=(BehaviorName=ChaosGenericRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryChaosPsiheal, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryGrenadeAny, \\
	Child[3]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[4]=TryPhantomVanish, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=ChaosPsion_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChaosPsion_RedAbilitySelector)
+Behaviors=(BehaviorName=ChaosPsion_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChaosPsionRedFirstAction, Child[2]=ChaosPsionRedLastAction)


+Behaviors=(BehaviorName=ChaosPsionRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChaosPsionRedFirstActionSelector)
+Behaviors=(BehaviorName=ChaosPsionRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrdefensive, \\
	Child[2]=TryChaosPsiheal, \\
	Child[3]=TryMoveThenGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[5]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=ChaosPsionRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChaosPsionRedLastActionSelector)
+Behaviors=(BehaviorName=ChaosPsionRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryChaosPsiheal, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=TryPhantomVanish, \\
	Child[5]=SelectMove_JobOrdefensive)



+Behaviors=(BehaviorName=ChaosMike_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChaosMike_RedAbilitySelector)
+Behaviors=(BehaviorName=ChaosMike_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChaosMikeRedFirstAction, Child[2]=ChaosMikeRedLastAction)

+Behaviors=(BehaviorName=ChaosMikeRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChaosMikeRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.
+Behaviors=(BehaviorName=ChaosMikeRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryHighPriorityShot, \\
	Child[4]=TryMoveToSuppressClosest, \\
	Child[5]=TryTwoTurnAttackSupportIfSafe, \\
	Child[6]=SelectMoveProfileByJob, \\
	Child[7]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[8]=HuntEnemyWithCover) 

+Behaviors=(BehaviorName=ChaosMikeRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChaosMikeRedLastActionSelector)
+Behaviors=(BehaviorName=ChaosMikeRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=ShootOrSuppressIfNoGoodShot, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrFlanking) 


+Behaviors=(BehaviorName=TryTriggerRage-Chaos, NodeType=Sequence, Child[0]=IsAbilityAvailable-TriggerRage, Child[1]=SelectAbility-TriggerRage)

+Behaviors=(BehaviorName=TryChaosPsiHeal, NodeType=Sequence, Child[0]=IsAbilityReady-ChaosPsiHeal, Child[1]=SelectTargetForChaosPsiHeal, Child[2]=SelectAbility-ChaosPsiHeal)

+Behaviors=(BehaviorName=SelectTargetForChaosPsiHeal, NodeType=Sequence,  Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForHeal, Child[2]=UpdateBestTarget)


+Behaviors=(BehaviorName=ScoreBestTargetForHeal, NodeType=Sequence, Child[0]=TargetIsAlly, Child[1]=TargetWounded, Child[2]=EvaluateForHeal)
+Behaviors=(BehaviorName=EvaluateForHeal, NodeType=Sequence, Child[0]=ScoreByHP)


+Behaviors=(BehaviorName=SelectAbility-ChaosPsiHeal, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-ChaosPsiHeal, NodeType=Condition)


; Vanish
+Behaviors=(BehaviorName=TryPhantomVanish, NodeType=Sequence, Child[0]=IsAbilityAvailable-Phantom_Vanish, Child[1]=SelectAbility-Phantom_Vanish)
+Behaviors=(BehaviorName=IsAbilityAvailable-Phantom_Vanish, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Phantom_Vanish, NodeType=Action)

+Behaviors=(BehaviorName=TryPhantomKillZone, NodeType=Sequence, Child[0]=IsAbilityAvailable-KillZone, Child[1]=FindPotentialAoETargets-PhantomKillZoneProfile, Child[2]=SelectAoETarget-PhantomKillZoneProfile, Child[3]=SelectAbility-KillZone)

+Behaviors=(BehaviorName=FindPotentialAoETargets-PhantomKillZoneProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-PhantomKillZoneProfile, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-KillZone, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-KillZone, NodeType=Action)
