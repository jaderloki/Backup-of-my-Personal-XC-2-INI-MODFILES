[XComGame.XComGameState_AIGroup]
+FallbackExclusionList="SectoidVoidweaver"

[XComGame.XGAIBehavior]
+AoEProfiles=( Profile=OblivionBombProfile, Ability=OblivionBombStage1, MinTargets=1, bFailOnFriendlyFire=1, bFailOnObjectiveFire=False)
+AoEProfiles=( Profile=SubmissionWaveProfile, Ability=SubmissionWave, MinTargets=1, bRequirePotentialTarget=1) 
+AoEProfiles=( Profile=SubmissionWaveValidateProfile, Ability=SubmissionWave, bTestLocationValidity=1, MinTargets=1) 
+AoEProfiles=( Profile=AlluringVenomProfile, Ability=AlluringVenom, bIgnoreSelfDamage=1)
+AoEProfiles=( Profile=AlluringVenomSingleProfile, Ability=AlluringVenom, bIgnoreSelfDamage=1, MinTargets=1)
+AoEProfiles=( Profile=SoporificBreathProfile, Ability=SoporificBreath, bIgnoreSelfDamage=1)
+AoEProfiles=( Profile=SoporificBreathSingleProfile, Ability=SoporificBreath, bIgnoreSelfDamage=1, MinTargets=1)
+AoEProfiles=( Profile=IndolenceWaveProfile, Ability=IndolenceWave, MinTargets=1, bRequirePotentialTarget=1) 
+AoEProfiles=( Profile=IndolenceWaveValidateProfile, Ability=IndolenceWave, bTestLocationValidity=1, MinTargets=1)


[XComGame.X2AIBTBehaviorTree]
; -------------------- Sectoid Voidweaver ---------------------------------------------
+Behaviors=(BehaviorName=SectoidVoidweaverRoot, NodeType=Selector, Child[0]=GenericGreenMovement, Child[1]=SectoidVoidweaver_RedAlert, Child[2]=GenericAlertHandler)
+Behaviors=(BehaviorName=SectoidVoidweaver_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=SectoidVoidweaver_RedAbilitySelector)
+Behaviors=(BehaviorName=SectoidVoidweaver_RedAbilitySelector, NodeType=Selector, Child[0]=SectoidVoidweaverRedFirstAction, Child[1]=SectoidVoidweaverRedLastAction)

+Behaviors=(BehaviorName=SectoidVoidweaverRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=SectoidVoidweaverRedFirstActionSelector)
+Behaviors=(BehaviorName=SectoidVoidweaverRedFirstActionSelector, NodeType=Selector, Child[0]=TryAstralConduit, Child[1]=DoIfFlankedMove, Child[2]=TryMoveThenAstralConduit, Child[3]=MoveDefensive, Child[4]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=SectoidVoidweaverRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=SectoidVoidweaverRedLastActionSelector)
+Behaviors=(BehaviorName=SectoidVoidweaverRedLastActionSelector, NodeType=Selector, Child[0]=TryAstralConduit, Child[1]=TryShootOrReloadOrOverwatch, Child[2]=MoveDefensive)

+Behaviors=(BehaviorName=TryAstralConduit, NodeType=Sequence, Child[0]=IsAbilityAvailable-AstralConduit, Child[1]=SelectAbility-AstralConduit)
+Behaviors=(BehaviorName=IsAbilityAvailable-AstralConduit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AstralConduit, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-AstralConduit, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryMoveForAstralConduit, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-AstralConduit, Child[2]=MoveStandardIfFirstAbility-AstralConduit)
+Behaviors=(BehaviorName=TryMoveThenAstralConduit, NodeType=Selector, Child[0]=TryMoveForAstralConduit, Child[1]=TryAstralConduit)

; -------------------- The Silenced ---------------------------------------------
+Behaviors=(BehaviorName="DespairAvatarRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=DespairAvatarRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=DespairAvatarRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=DespairAvatarRedAbilitySelector)
+Behaviors=(BehaviorName=DespairAvatarRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=DespairAvatarRedFirstAction, Child[2]=DespairAvatarRedLastAction)

+Behaviors=(BehaviorName=DespairAvatarRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=DespairAvatarRedFirstActionSelector)
+Behaviors=(BehaviorName=DespairAvatarRedFirstActionSelector, NodeType=Selector, Child[0]=TryMoveThenOblivionBomb, Child[1]=TryMoveThenSubmissionWave, Child[2]=DoIfFlankedMove, Child[3]=SelectMoveStandard, Child[4]=PsiWitchAttackSequencer, Child[5]=HuntEnemyWithCover, Child[6]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=DespairAvatarRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=DespairAvatarRedLastActionSelector)
+Behaviors=(BehaviorName=DespairAvatarRedLastActionSelector, NodeType=Selector, Child[0]=DespairAvatarAttackSequencer, Child[1]=SelectMoveStandard, Child[2]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=DespairAvatarAttackSequencer, NodeType=Selector, Child[0]=TryOblivionBomb, Child[1]=TrySubmissionWave, Child[2]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=FindPotentialAoETargets-OblivionBombProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-OblivionBombProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-OblivionBombStage1, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-OblivionBombStage1, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-OblivionBombStage1, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-OblivionBombStage1, NodeType=Action)
+Behaviors=(BehaviorName=TryOblivionBomb, NodeType=Sequence, Child[0]=IsAbilityAvailable-OblivionBombStage1, Child[1]=FindPotentialAoETargets-OblivionBombProfile, Child[2]=SelectAoETarget-OblivionBombProfile, Child[3]=SelectAbility-OblivionBombStage1)
+Behaviors=(BehaviorName=TryMoveThenOblivionBomb, NodeType=Selector, Child[0]=TryMoveForOblivionBomb, Child[1]=TryOblivionBomb)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-OblivionBombStage1, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindOblivionBombDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindOblivionBombDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-OblivionBombStage1, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=TryMoveForOblivionBomb, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-OblivionBombStage1, Child[2]=FindPotentialAoETargets-OblivionBombProfile, Child[3]=MoveStandardIfFirstAbility-OblivionBombStage1)

+Behaviors=(BehaviorName=IsAbilityAvailable-SubmissionWave, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-SubmissionWave, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-SubmissionWave, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-SubmissionWave, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindSubmissionWaveDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindSubmissionWaveDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-SubmissionWave, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=SelectAoETarget-SubmissionWaveProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-SubmissionWaveValidateProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-SubmissionWaveProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-SubmissionWaveValidateProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-SubmissionWave, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-SubmissionWave, NodeType=Condition)
+Behaviors=(BehaviorName=TrySubmissionWave, NodeType=Sequence, Child[0]=IsAbilityAvailable-SubmissionWave, Child[1]=FindPotentialAoETargets-SubmissionWaveValidateProfile, Child[2]=SelectAoETarget-SubmissionWaveValidateProfile, Child[3]=SelectAbility-SubmissionWave)
+Behaviors=(BehaviorName=TryMoveThenSubmissionWave, NodeType=Selector, Child[0]=TryMoveForSubmissionWave, Child[1]=TrySubmissionWave)
+Behaviors=(BehaviorName=TryMoveForSubmissionWave, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-SubmissionWave, Child[2]=NotLastActionPoint, Child[3]=SelectPotentialMeleeTarget, Child[4]=FindPotentialAoETargets-SubmissionWaveProfile, Child[5]=MoveStandardIfFirstAbility-SubmissionWave)

; -------------------- The Ravager -----------------------------------------------
+Behaviors=(BehaviorName="WrathBerserkerRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=WrathBerserkerMeleeRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=WrathBerserkerMeleeRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=WrathBerserker_RedAbilitySelector)
+Behaviors=(BehaviorName=WrathBerserker_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=WrathBerserkerRedFirstAction, Child[2]=WrathBerserkerRedLastAction);

+Behaviors=(BehaviorName=AffectedByEffect-BloodFrenzyTriggered, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-TriggerBloodFrenzy, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-TriggerBloodFrenzy, NodeType=Action)

+Behaviors=(BehaviorName=WrathBerserkerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=WrathBerserkerRedFirstActionSelector)
+Behaviors=(BehaviorName=WrathBerserkerRedFirstActionSelector, NodeType=Selector, Child[0]=TryWrathQuake, Child[1]=TryWrathBerserkerMelee, Child[2]=MoveMeleeDashFANATICUnsafe, Child[3]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=WrathBerserkerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=WrathBerserkerRedLastActionSelector)
+Behaviors=(BehaviorName=WrathBerserkerRedLastActionSelector, NodeType=Selector, Child[0]=TryWrathQuake, Child[1]=TryWrathBerserkerMelee, Child[2]=MoveMeleeDashFANATICUnsafe, Child[3]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=TryWrathBerserkerMelee, NodeType=Sequence, Child[0]=IsAbilityReady-DevastatingPunch, Child[1]=MoveMeleeOrDevastatingPunchAttack)
+Behaviors=(BehaviorName=TryTriggerBloodFrenzy, NodeType=Sequence, Child[0]=IsAbilityAvailable-TriggerBloodFrenzy, Child[1]=SelectAbility-TriggerBloodFrenzy)
+Behaviors=(BehaviorName=TryWrathQuake, NodeType=Sequence, Child[0]=QuakeHasPotentialAoETarget, Child[1]=SelectAoETarget-QuakeProfile, Child[2]=SelectAbility-Quake)
+Behaviors=(BehaviorName=QuakeHasPotentialAoETarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-Quake, Child[1]=FindPotentialAoETargets-QuakeProfile)

; -------------------- The Temptress ----------------------------------------------
+Behaviors=(BehaviorName="LustViperRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LustViperRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LustViperRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LustViperRedAbilitySelector)
+Behaviors=(BehaviorName=LustViperRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=LustViperRedFirstAction, Child[2]=LustViperRedLastAction)

+Behaviors=(BehaviorName=RestrictToAbilityRange-AlluringVenom, NodeType=Action)
+Behaviors=(BehaviorName=FindAlluringVenomDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-AlluringVenom, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=IsAbilityAvailable-AlluringVenom, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-AlluringVenom, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AlluringVenom, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-AlluringVenomProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-AlluringVenomSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AlluringVenomProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AlluringVenomSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-AlluringVenom, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindAlluringVenomDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryMoveThenAlluringVenom, NodeType=Selector, Child[0]=TryMoveForAlluringVenom, Child[1]=TryAlluringVenom)
+Behaviors=(BehaviorName=TryMoveForAlluringVenom, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-AlluringVenom, Child[2]=FindPotentialAoETargets-AlluringVenomProfile, Child[3]=MoveStandardIfFirstAbility-AlluringVenom)
+Behaviors=(BehaviorName=TryAlluringVenom, NodeType=Sequence, Child[0]=IsAbilityAvailable-AlluringVenom, Child[1]=FindPotentialAoETargets-AlluringVenomProfile, Child[2]=SelectAoETarget-AlluringVenomProfile, Child[3]=SelectAbility-AlluringVenom)
+Behaviors=(BehaviorName=TryMoveThenAlluringVenomSingle, NodeType=Selector, Child[0]=TryMoveForAlluringVenomSingle, Child[1]=TryAlluringVenomSingle)
+Behaviors=(BehaviorName=TryMoveForAlluringVenomSingle, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-AlluringVenom, Child[2]=FindPotentialAoETargets-AlluringVenomSingleProfile, Child[3]=MoveStandardIfFirstAbility-AlluringVenom)
+Behaviors=(BehaviorName=TryAlluringVenomSingle, NodeType=Sequence, Child[0]=IsAbilityAvailable-AlluringVenom, Child[1]=FindPotentialAoETargets-AlluringVenomSingleProfile, Child[2]=SelectAoETarget-AlluringVenomSingleProfile, Child[3]=SelectAbility-AlluringVenom)

+Behaviors=(BehaviorName=IsAbilityAvailable-EnsnaringEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-EnsnaringEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-EnsnaringEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=TryGetOverHere, NodeType=Sequence, Child[0]=IsAbilityAvailable-GetOverHere, Child[1]=HasBindableNeighborTile, Child[2]=SelectTargetForGetOverHere, Child[3]=SelectAbility-GetOverHere)
+Behaviors=(BehaviorName=HasValidTarget-EnsnaringEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-EnsnaringEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=TryEnsnaringEmbrace, NodeType=Sequence, Child[0]=IsAbilityReady-EnsnaringEmbrace, Child[1]=MoveMeleeOrEnsnaringEmbraceAttack)
+Behaviors=(BehaviorName=MoveMeleeOrEnsnaringEmbraceAttack, NodeType=Selector, Child[0]=EnsnaringEmbraceAttack, Child[1]=MoveForEnsnaringEmbraceIfFirstAbility)
+Behaviors=(BehaviorName=EnsnaringEmbraceAttack, NodeType=Sequence, Child[0]=IsAbilityAvailable-EnsnaringEmbrace, Child[1]=SelectTargetForEnsnaringEmbrace, Child[2]=SelectAbility-EnsnaringEmbrace)
+Behaviors=(BehaviorName=MoveForEnsnaringEmbraceIfFirstAbility, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=MoveForEnsnaringEmbraceIfFirstAbilityUnsafe)
+Behaviors=(BehaviorName=MoveForEnsnaringEmbraceIfFirstAbilityUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=ResetDestinationSearch, Child[3]=IncludeCiviliansIfTerrorist, Child[4]=FindLustViperMeleeDestination, Child[5]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindLustViperMeleeDestination, NodeType=Sequence, Child[0]=SelectPotentialTargetForEnsnaringEmbrace, Child[1]=RestrictToPotentialTargetRange-StandardMelee, Child[2]=FindRestrictedDestination-MWP_Melee)
+Behaviors=(BehaviorName=SelectTargetForEnsnaringEmbrace, NodeType=Sequence, Child[0]=SetTargetStack-EnsnaringEmbrace, Child[1]=SelectBestTargetForEnsnaringEmbrace, Child[2]=HasValidTarget-EnsnaringEmbrace)
+Behaviors=(BehaviorName=SelectPotentialTargetForEnsnaringEmbrace, NodeType=Sequence, Child[0]=SetPotentialTargetStack, Child[1]=SelectBestTargetForEnsnaringEmbrace, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestTargetForEnsnaringEmbrace, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)

+Behaviors=(BehaviorName=RestrictToAbilityRange-CaptivatingGaze, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-CaptivatingGaze, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CaptivatingGaze, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-CaptivatingGaze, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindMindControlDestinationDefensive, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=HasValidTarget-CaptivatingGaze, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-CaptivatingGaze, NodeType=Action)
+Behaviors=(BehaviorName=TryCaptivatingGaze, NodeType=Sequence, Child[0]=IsAbilityAvailable-CaptivatingGaze, Child[1]=SelectTargetForCaptivatingGaze, Child[2]=SelectAbility-CaptivatingGaze)
+Behaviors=(BehaviorName=SelectTargetForCaptivatingGaze, NodeType=Sequence, Child[0]=SetTargetStack-CaptivatingGaze, Child[1]=SelectBestTargetForCaptivatingGaze, Child[2]=HasValidTarget-CaptivatingGaze)
+Behaviors=(BehaviorName=SelectBestTargetForCaptivatingGaze, NodeType=RepeatUntilFail, Child[0]=PsiEvaluateTargetsMindControl)
+Behaviors=(BehaviorName=TryMoveForCaptivatingGaze, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-CaptivatingGaze, Child[2]=SelectTargetForCaptivatingGaze, Child[3]=MoveStandardIfFirstAbility-CaptivatingGaze)
+Behaviors=(BehaviorName=TryMoveThenCaptivatingGaze, NodeType=Selector, Child[0]=TryMoveForCaptivatingGaze, Child[1]=TryCaptivatingGaze)

+Behaviors=(BehaviorName=LustViperRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LustViperRedFirstActionSelector)
+Behaviors=(BehaviorName=LustViperRedFirstActionSelector, NodeType=Selector, Child[0]=TryCaptivatingGaze, Child[1]=TryMoveThenAlluringVenom, Child[2]=TryGetOverHere, Child[3]=TryEnsnaringEmbrace, Child[4]=TryMoveThenAlluringVenomSingle, Child[5]=SelectMoveStandard, Child[6]=TryShootOrReloadOrOverwatch, Child[7]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=LustViperRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LustViperRedLastActionSelector)
+Behaviors=(BehaviorName=LustViperRedLastActionSelector, NodeType=Selector, Child[0]=TryCaptivatingGaze, Child[1]=TryAlluringVenom, Child[2]=TryGetOverHere, Child[3]=TryEnsnaringEmbrace, Child[4]=TryAlluringVenomSingle, Child[5]=TryShootOrReloadOrOverwatch, Child[6]=DoIfFlankedMove, Child[7]=HuntEnemyWithCover, Child[8]=SelectMoveStandard)

+Behaviors=(BehaviorName="LustViper::CustomMeleeTargetScore", NodeType=Sequence, Child[0]=TargetNotValidForEnsnaringEmbrace, Child[1]=AddToTargetScore_-1000) ;Overwrite option for melee abilities that are restricted.
+Behaviors=(BehaviorName=TargetNotValidForEnsnaringEmbrace, NodeType=Selector, Child[0]=TargetIsAlien, Child[1]=TargetIsRobotic)

; -------------------- The Hoarder ----------------------------------------------
+Behaviors=(BehaviorName="GreedSpectreRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GreedSpectre_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=GreedSpectre_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GreedSpectre_RedAbilitySelector)
+Behaviors=(BehaviorName=GreedSpectre_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GreedSpectre_RedFirstAction, Child[2]=GreedSpectre_RedLastAction)

+Behaviors=(BehaviorName=GreedSpectre_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GreedSpectre_RedFirstActionSelector)
+Behaviors=(BehaviorName=GreedSpectre_RedFirstActionSelector, NodeType=Selector, Child[0]=DoIfFlankedMove, Child[1]=TryInsatiableShot, Child[2]=SelectMove_JobOrDefensive, Child[3]=GreedSpectreTryMoveThenInsatiableShot, Child[4]=TryShootOrReloadOrOverwatch, Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=GreedSpectre_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GreedSpectre_RedLastActionSelector)
+Behaviors=(BehaviorName=GreedSpectre_RedLastActionSelector, NodeType=Selector, Child[0]=TryInsatiableShot, Child[1]=GreedSpectreTryInsatiableShot, Child[2]=TryShootOrReloadOrOverwatch, Child[3]=HuntEnemyWithCover, Child[4]=SelectMove_JobOrDefensive)

+Behaviors=(BehaviorName=GreedSpectreTryMoveThenInsatiableShot, NodeType=Sequence, Child[0]=IsGreedSpectreQualifiedForInsatiableShot, Child[1]=TryMoveThenInsatiableShot)
+Behaviors=(BehaviorName=GreedSpectreTryInsatiableShot, NodeType=Sequence, Child[0]=IsGreedSpectreQualifiedForInsatiableShot, Child[1]=TryInsatiableShot)
+Behaviors=(BehaviorName=IsGreedSpectreQualifiedForInsatiableShot, NodeType=Selector, Child[0]=NotGreedSpectreM1, Child[1]=IsDifficultyAboveNormal)
+Behaviors=(BehaviorName=NotGreedSpectreM1, NodeType=Inverter, Child[0]=TemplateNameIs-GreedSpectreM1)
+Behaviors=(BehaviorName=TemplateNameIs-GreedSpectreM1, NodeType=Condition)

+Behaviors=(BehaviorName=IsAbilityAvailable-InsatiableShot, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-InsatiableShot, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-InsatiableShot, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-InsatiableShot, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-InsatiableShot, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForInsatiableShot, NodeType=Sequence, Child[0]=SetTargetStack-InsatiableShot, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-InsatiableShot)
+Behaviors=(BehaviorName=TryMoveThenInsatiableShot, NodeType=Selector, Child[0]=TryMoveForInsatiableShot, Child[1]=SelectTargetForInsatiableShot, Child[2]=TryInsatiableShot)
+Behaviors=(BehaviorName=TryMoveForInsatiableShot, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-InsatiableShot, Child[2]=SelectTargetForInsatiableShot, Child[3]=TryInsatiableShot)
+Behaviors=(BehaviorName=TryInsatiableShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-InsatiableShot, Child[1]=SelectTargetForInsatiableShot, Child[2]=SelectAbility-InsatiableShot)

; -------------------- The Imperious ---------------------------------------------
+Behaviors=(BehaviorName="PrideArchonRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=PrideArchonRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=PrideArchonRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=PrideArchonRedAbilitySelector)
+Behaviors=(BehaviorName=PrideArchonRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=PrideArchonRedHuntAction, Child[2]=PrideArchonRedFirstAction, Child[3]=PrideArchonRedLastAction)

+Behaviors=(BehaviorName="PrideArchonIcarusGrab", NodeType=Sequence, Child[0]=IsAbilityAvailable-IcarusDropGrab, Child[1]=SelectTargetForIcarusDrop, Child[2]=SelectAbility-IcarusDropGrab)

+Behaviors=(BehaviorName=PrideArchonRedHuntAction, NodeType=Sequence, Child[0]=HasThreeActionPoints, Child[1]=HuntEnemy)

+Behaviors=(BehaviorName=PrideArchonRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=PrideArchonFirstActionSelector)
+Behaviors=(BehaviorName=PrideArchonFirstActionSelector, NodeType=Selector, Child[0]=ContinueIcarusDropInProgress, Child[1]=TryMoveThenBlazingPinions, Child[2]=DoIfFlankedMove, Child[3]=TryMeleeOrShoot, Child[4]=SelectMoveStandard)

+Behaviors=(BehaviorName=TryMoveThenBlazingPinions, NodeType=Selector, Child[0]=TryMoveForBlazingPinions, Child[1]=TryBlazingPinions)

+Behaviors=(BehaviorName=PrideArchonRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=PrideArchonRedLastActionSelector)
+Behaviors=(BehaviorName=PrideArchonRedLastActionSelector, NodeType=Selector, Child[0]=ContinueIcarusDropInProgress, Child[1]=PrideArchonIcarusGrab, Child[2]=TryBlazingPinions, Child[3]=TryShootOrReloadOrOverwatch, Child[4]=HuntEnemy, Child[5]=SelectMoveStandard)

; -------------------- The Jaundiced ----------------------------------------------
+Behaviors=(BehaviorName="EnvyLostRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=EnvyLostRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=EnvyLostRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=EnvyLostRedAbilitySelector)
+Behaviors=(BehaviorName=EnvyLostRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=EnvyLostRedFirstAction, Child[2]=EnvyLostRedLastAction)

+Behaviors=(BehaviorName=EnvyLostRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=EnvyLostFirstActionSelector)
+Behaviors=(BehaviorName=EnvyLostFirstActionSelector, NodeType=Selector, Child[0]=TryMoveThenCopycatMobility, Child[1]=TryMoveThenPowerLeech, Child[2]=TryEnvyObsessedOption, Child[3]=HuntEnemyWithCover,  Child[4]=TryEnvyLostAttack, Child[5]=DoIfFlankedMove, Child[6]=SelectMoveStandard)

+Behaviors=(BehaviorName=TryCopycatMobilityPriority, NodeType=Sequence, Child[0]=TryCopycatMobility)
+Behaviors=(BehaviorName=TryCopycatMobilityPriorityWithMove, NodeType=Sequence, Child[0]=TryMoveThenCopycatMobility)
+Behaviors=(BehaviorName=TryMoveThenCopycatMobility, NodeType=Selector, Child[0]=CopycatMobilityMoveIfFirstAction, Child[1]=TryCopycatMobilityPriority)
+Behaviors=(BehaviorName=CopycatMobilityMoveIfFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CopycatMobilityMove)
+Behaviors=(BehaviorName=CopycatMobilityMove, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-CopycatMobility, Child[2]=RestrictToUnflanked, Child[3]=FindDestinationWithLoS-MWP_Defensive, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryCopycatMobility, NodeType=Sequence, Child[0]=IsAbilityAvailable-CopycatMobility, Child[1]=SetTargetStack-CopycatMobility, Child[2]=SelectNLREnemyTargetRandomly, Child[3]=HasValidTarget-CopycatMobility, Child[4]=SelectRevealedCopycatMobilityOption)
+Behaviors=(BehaviorName=SelectRevealedCopycatMobilityOption, NodeType=Selector, Child[0]=RevealIfHiddenThenCopycatMobility, Child[1]=SelectAbility-CopycatMobility)
+Behaviors=(BehaviorName=SetPreselectedAbility-CopycatMobility, NodeType=Action)
+Behaviors=(BehaviorName=RevealIfHiddenThenCopycatMobility, NodeType=Sequence, Child[0]=IsAbilityAvailable-VanishReveal, Child[1]=SelectAbility-VanishReveal, Child[2]=SetPreselectedAbility-CopycatMobility)
+Behaviors=(BehaviorName=IsAbilityAvailable-CopycatMobility, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-CopycatMobility, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-CopycatMobility, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CopycatMobility, NodeType=Action)

+Behaviors=(BehaviorName=TryPowerLeechPriority, NodeType=Sequence, Child[0]=TryPowerLeech)
+Behaviors=(BehaviorName=TryPowerLeechPriorityWithMove, NodeType=Sequence, Child[0]=TryMoveThenPowerLeech)
+Behaviors=(BehaviorName=TryMoveThenPowerLeech, NodeType=Selector, Child[0]=PowerLeechMoveIfFirstAction, Child[1]=TryPowerLeechPriority)
+Behaviors=(BehaviorName=PowerLeechMoveIfFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=PowerLeechMove)
+Behaviors=(BehaviorName=PowerLeechMove, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-PowerLeech, Child[2]=RestrictToUnflanked, Child[3]=FindDestinationWithLoS-MWP_Defensive, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryPowerLeech, NodeType=Sequence, Child[0]=IsAbilityAvailable-PowerLeech, Child[1]=SetTargetStack-PowerLeech, Child[2]=SelectNLREnemyTargetRandomly, Child[3]=HasValidTarget-PowerLeech, Child[4]=SelectRevealedPowerLeechOption)
+Behaviors=(BehaviorName=SelectRevealedPowerLeechOption, NodeType=Selector, Child[0]=RevealIfHiddenThenPowerLeech, Child[1]=SelectAbility-PowerLeech)
+Behaviors=(BehaviorName=SetPreselectedAbility-PowerLeech, NodeType=Action)
+Behaviors=(BehaviorName=RevealIfHiddenThenPowerLeech, NodeType=Sequence, Child[0]=IsAbilityAvailable-VanishReveal, Child[1]=SelectAbility-VanishReveal, Child[2]=SetPreselectedAbility-PowerLeech)
+Behaviors=(BehaviorName=IsAbilityAvailable-PowerLeech, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-PowerLeech, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-PowerLeech, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-PowerLeech, NodeType=Action)

+Behaviors=(BehaviorName=EnvyLostRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=EnvyLostRedLastActionSelector)
+Behaviors=(BehaviorName=EnvyLostRedLastActionSelector, NodeType=Selector, Child[0]=TryMoveThenCopycatMobility, Child[1]=TryCopycatMobility, Child[2]=TryPowerLeech, Child[3]=TryEnvyLostAttack, Child[4]=HuntEnemy, Child[5]=SelectMoveStandard)

+Behaviors=(BehaviorName=IsAbilityAvailable-EnvyObsessed, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-EnvyObsessed, NodeType=Action)
+Behaviors=(BehaviorName=TryEnvyObsessedOption, NodeType=Sequence, Child[0]=IsAbilityAvailable-EnvyObsessed, Child[1]=AnyAlliesVisible, Child[2]=MultipleEnemiesVisible, Child[3]=NoUnitsMarked, Child[4]=SelectTargetForEnvyObsessed, Child[5]=SelectAbility-EnvyObsessed, Intent="Marking a target: GETTIM!")
+Behaviors=(BehaviorName=SelectTargetForEnvyObsessed, NodeType=Sequence, Child[0]=SetTargetStack-EnvyObsessed, Child[1]=ScoreAllTargets_EnvyObsessed, Child[2]=HasValidTarget-EnvyObsessed)
+Behaviors=(BehaviorName=ScoreAllTargets_EnvyObsessed, NodeType=RepeatUntilFail, Child[0]=ScoreTarget_EnvyObsessedLoop)
+Behaviors=(BehaviorName=ScoreTarget_EnvyObsessedLoop, NodeType=Sequence, Child[0]=ScoreTarget_EnvyObsessedScoring, Child[1]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreTarget_EnvyObsessedScoring, NodeType=Successor, Child[0]=ScoreEnvyObsessedOption)
+Behaviors=(BehaviorName=ScoreEnvyObsessedOption, NodeType=Sequence, Child[0]=TargetIsEnemy, Child[1]=TargetIsNotCivilian, Child[2]=ScoreByHP, Child[3]=TargetScoreHealth_HighFirst, Child[4]=TargetScoreHighestSoldierRank, Child[5]=TargetScoreTeamVisibility, Child[6]=SometimesRandomizeTarget, Child[7]=AvoidBoundAndPanickedTargets, Child[8]=SSTeamSpecificModifiers)
+Behaviors=(BehaviorName=SetTargetStack-EnvyObsessed, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-EnvyObsessed, NodeType=Condition)

+Behaviors=(BehaviorName=IsAbilityAvailable-EnvyLostAttack, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-EnvyLostAttack, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-EnvyLostAttack, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-EnvyLostAttack, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-EnvyLostAttack, NodeType=Action)
+Behaviors=(BehaviorName=TryEnvyLostAttack, NodeType=Sequence, Child[0]=IsAbilityReady-EnvyLostAttack, Child[1]=EnvyLostAttackStepSelector)
+Behaviors=(BehaviorName=EnvyLostAttackStepSelector, NodeType=Selector, Child[0]=EnvyLostAttack, Child[1]=MoveMeleeDefensiveIfFirstAbility)
+Behaviors=(BehaviorName=EnvyLostAttack, NodeType=Sequence, Child[0]=IsAbilityAvailable-EnvyLostAttack, Child[1]=SelectTargetForEnvyLostAttack, Child[2]=SelectAbility-EnvyLostAttack)
+Behaviors=(BehaviorName=SelectTargetForEnvyLostAttack, NodeType=Sequence, Child[0]=SetTargetStack-EnvyLostAttack, Child[1]=SelectBestTargetForStandardMelee, Child[2]=HasValidTarget-EnvyLostAttack)
+Behaviors=(BehaviorName=SelectBestTargetForEnvyLostAttack, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)

; -------------------- The Slumberer ---------------------------------------------
+Behaviors=(BehaviorName=RestrictToAbilityRange-SoporificBreath, NodeType=Action)
+Behaviors=(BehaviorName=FindSoporificBreathDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-SoporificBreath, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=IsAbilityAvailable-SoporificBreath, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-SoporificBreath, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SoporificBreath, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-SoporificBreathProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-SoporificBreathSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-SoporificBreathProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-SoporificBreathSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-SoporificBreath, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindSoporificBreathDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryMoveThenSoporificBreath, NodeType=Selector, Child[0]=TryMoveForSoporificBreath, Child[1]=TrySoporificBreath)
+Behaviors=(BehaviorName=TryMoveForSoporificBreath, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-SoporificBreath, Child[2]=FindPotentialAoETargets-SoporificBreathProfile, Child[3]=MoveStandardIfFirstAbility-SoporificBreath)
+Behaviors=(BehaviorName=TrySoporificBreath, NodeType=Sequence, Child[0]=IsAbilityAvailable-SoporificBreath, Child[1]=FindPotentialAoETargets-SoporificBreathProfile, Child[2]=SelectAoETarget-SoporificBreathProfile, Child[3]=SelectAbility-SoporificBreath)
+Behaviors=(BehaviorName=TryMoveThenSoporificBreathSingle, NodeType=Selector, Child[0]=TryMoveForSoporificBreathSingle, Child[1]=TrySoporificBreathSingle)
+Behaviors=(BehaviorName=TryMoveForSoporificBreathSingle, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-SoporificBreath, Child[2]=FindPotentialAoETargets-SoporificBreathSingleProfile, Child[3]=MoveStandardIfFirstAbility-SoporificBreath)
+Behaviors=(BehaviorName=TrySoporificBreathSingle, NodeType=Sequence, Child[0]=IsAbilityAvailable-SoporificBreath, Child[1]=FindPotentialAoETargets-SoporificBreathSingleProfile, Child[2]=SelectAoETarget-SoporificBreathSingleProfile, Child[3]=SelectAbility-SoporificBreath)

+Behaviors=(BehaviorName=RestrictToAbilityRange-IndolenceWave, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-IndolenceWave, NodeType=Action)
+Behaviors=(BehaviorName=FindIndolenceWaveDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-IndolenceWave, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)
FindIndolenceWaveTeleportDestination, NodeType=Sequence, Child[0]=RestrictToPotentialTargetRange-IndolenceWave, Child[1]=UseDashMovement, Child[2]=FindRestrictedDestination-MWP_Teleport)
+Behaviors=(BehaviorName=IsAbilityAvailable-IndolenceWave, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-IndolenceWave, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-IndolenceWave, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-IndolenceWaveProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-IndolenceWaveValidateProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-IndolenceWaveProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-IndolenceWaveValidateProfile, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-IndolenceWave, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindIndolenceWaveDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryIndolenceWave, NodeType=Sequence, Child[0]=IsAbilityAvailable-IndolenceWave, Child[1]=FindPotentialAoETargets-IndolenceWaveValidateProfile, Child[2]=SelectAoETarget-IndolenceWaveValidateProfile, Child[3]=SelectAbility-IndolenceWave)
+Behaviors=(BehaviorName=TryMoveThenIndolenceWave, NodeType=Selector, Child[0]=TryMoveForIndolenceWave, Child[1]=TryIndolenceWave)
+Behaviors=(BehaviorName=TryMoveForIndolenceWave, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-IndolenceWave, Child[2]=NotLastActionPoint, Child[3]=SelectPotentialMeleeTarget, Child[4]=FindPotentialAoETargets-IndolenceWaveProfile, Child[5]=MoveStandardIfFirstAbility-IndolenceWave)

+Behaviors=(BehaviorName=IsAbilityAvailable-Narcolepsy, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Narcolepsy, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Narcolepsy, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Narcolepsy, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForNarcolepsy, NodeType=Sequence, Child[0]=SetTargetStack-Narcolepsy, Child[1]=SelectBestTargetForNarcolepsy, Child[2]=HasValidTarget-Narcolepsy)
+Behaviors=(BehaviorName=SelectBestTargetForNarcolepsy, NodeType=RepeatUntilFail, Child[0]=PsiEvaluateTargetsGeneric)
+Behaviors=(BehaviorName=TryNarcolepsy, NodeType=Sequence, Child[0]=IsAbilityAvailable-Narcolepsy, Child[1]=SelectTargetForNarcolepsy, Child[2]=SelectAbility-Narcolepsy)

+Behaviors=(BehaviorName="SlothFacelessRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=SlothFacelessRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=SlothFacelessRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=SlothFacelessRedAbilitySelector)
+Behaviors=(BehaviorName=SlothFacelessRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=SlothFacelessRedFirstAction, Child[2]=SlothFacelessRedLastAction)

+Behaviors=(BehaviorName=SlothFacelessRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=SlothFacelessRedFirstActionSelector)
+Behaviors=(BehaviorName=SlothFacelessRedFirstActionSelector, NodeType=Selector, Child[0]=TryMoveThenIndolenceWave, Child[1]=TryMoveThenSoporificBreath, Child[2]=TryNarcolepsy, Child[3]=TryMoveThenSoporificBreathSingle, Child[4]=SelectMoveStandard, Child[5]=TryShootOrReloadOrOverwatch, Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=SlothFacelessRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=SlothFacelessRedLastActionSelector)
+Behaviors=(BehaviorName=SlothFacelessRedLastActionSelector, NodeType=Selector, Child[0]=TryStandardMelee, Child[1]=TrySoporificBreath, Child[2]=TryIndolenceWave, Child[3]=TrySoporificBreathSingle, Child[4]=TryShootOrReloadOrOverwatch, Child[5]=DoIfFlankedMove, Child[6]=HuntEnemyWithCover, Child[7]=SelectMoveStandard)

; -------------------- The Devourer ----------------------------------------------
+Behaviors=(BehaviorName=HasValidTarget-InsatiableHunger, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-InsatiableHunger, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-InsatiableHunger, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-InsatiableHunger, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForInsatiableHunger, NodeType=Sequence, Child[0]=SetTargetStack-InsatiableHunger, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-InsatiableHunger)
+Behaviors=(BehaviorName=HasHalfHP, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="50%")
+Behaviors=(BehaviorName=TryInsatiableHungerOnLowHP, NodeType=Sequence, Child[0]=IsAbilityAvailable-InsatiableHunger, Child[1]=SelectTargetForInsatiableHunger, Child[2]=HasHalfHp, Child[3]=SelectAbility-InsatiableHunger)
+Behaviors=(BehaviorName=TryInsatiableHunger, NodeType=Sequence, Child[0]=IsAbilityAvailable-InsatiableHunger, Child[1]=SelectTargetForInsatiableHunger, Child[2]=HasHalfHp, Child[3]=SelectAbility-InsatiableHunger)
+Behaviors=(BehaviorName=IsWounded, NodeType=TargetStatCondition, Param[0]=eStat_Hp, Param[1]="<", Param[2]="100%")

+Behaviors=(BehaviorName=HasValidTarget-Engorge, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Engorge, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-Engorge, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Engorge, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForEngorge, NodeType=Sequence, Child[0]=SetTargetStack-Engorge, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Engorge)
+Behaviors=(BehaviorName=TryEngorgeOnLowHP, NodeType=Sequence, Child[0]=IsAbilityAvailable-Engorge, Child[1]=SelectTargetForEngorge, Child[2]=IsWounded, Child[3]=SelectAbility-Engorge)
+Behaviors=(BehaviorName=TryEngorge, NodeType=Sequence, Child[0]=IsAbilityAvailable-Engorge, Child[1]=SelectTargetForEngorge, Child[2]=IsWounded, Child[3]=SelectAbility-Engorge)

+Behaviors=(BehaviorName=IsAbilityReady-VoraciousBite, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-VoraciousBite, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-VoraciousBite, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-VoraciousBite, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-VoraciousBite, NodeType=Action)
+Behaviors=(BehaviorName=TryVoraciousBite, NodeType=Sequence, Child[0]=IsAbilityReady-VoraciousBite, Child[1]=MoveMeleeOrVoraciousBiteAttack)
+Behaviors=(BehaviorName=MoveMeleeOrVoraciousBiteAttack, NodeType=Selector, Child[0]=TryVoraciousBiteAttack, Child[1]=MoveToVoraciousBiteTargetIfFirstAbility)
+Behaviors=(BehaviorName=TryVoraciousBiteAttack, NodeType=Sequence, Child[0]=IsAbilityAvailable-VoraciousBite, Child[1]=SelectTargetForVoraciousBite, Child[2]=SelectAbility-VoraciousBite)
+Behaviors=(BehaviorName=MoveToVoraciousBiteTargetIfFirstAbility, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=ResetDestinationSearch, Child[3]=IncludeCiviliansIfTerrorist, Child[4]=FindVoraciousBiteDestination, Child[5]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindVoraciousBiteDestination, NodeType=Sequence, Child[0]=SelectPotentialTargetForVoraciousBite, Child[1]=RestrictToPotentialTargetRange-StandardMelee, Child[2]=FindRestrictedDestination-MWP_Melee)
+Behaviors=(BehaviorName=SelectTargetForVoraciousBite, NodeType=Sequence, Child[0]=SetTargetStack-VoraciousBite, Child[1]=SelectBestTargetForVoraciousBite, Child[2]=HasValidTarget-VoraciousBite)
+Behaviors=(BehaviorName=SelectPotentialTargetForVoraciousBite, NodeType=Sequence, Child[0]=SetPotentialTargetStack, Child[1]=SelectBestTargetForVoraciousBite, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestTargetForVoraciousBite, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)

+Behaviors=(BehaviorName=IsAbilityReady-HungryRush, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HungryRush, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-HungryRush, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-HungryRush, NodeType=Action)
+Behaviors=(BehaviorName=TryHungryRush, NodeType=Sequence, Child[0]=IsAbilityReady-HungryRush, Child[1]=HungryRushStepSelector)
+Behaviors=(BehaviorName=HungryRushStepSelector, NodeType=Selector, Child[0]=HungryRushAttack)
+Behaviors=(BehaviorName=HungryRushAttack, NodeType=Sequence, Child[0]=SelectTargetForHungryRush, Child[1]=SelectAbility-HungryRush)
+Behaviors=(BehaviorName=SelectTargetForHungryRush, NodeType=Sequence, Child[0]=SetTargetStack-HungryRush, Child[1]=SelectBestTargetForHungryRush, Child[2]=HasValidTarget-HungryRush)
+Behaviors=(BehaviorName=SelectBestTargetForHungryRush, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)

+Behaviors=(BehaviorName="GluttonyChryssalidRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=GluttonyChryssalidRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=GluttonyChryssalidRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GluttonyChryssalidRedAbilitySelector)
+Behaviors=(BehaviorName=GluttonyChryssalidRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GlutChryssalidRedFirstAction, Child[2]=GlutChryssalidRedLastAction)

+Behaviors=(BehaviorName=GlutChryssalidRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GlutChryssalidFirstActionSelector)
+Behaviors=(BehaviorName=GlutChryssalidRedLastAction, NodeType=Selector, Child[0]=TryInsatiableHunger, Child[1]=TryEngorge, Child[2]=TryVoraciousBite, Child[3]=TryScythingClaws, Child[4]=HuntEnemyUnsafe)
+Behaviors=(BehaviorName=GlutChryssalidFirstActionSelector, NodeType=Selector, Child[0]=TryInsatiableHunger, Child[1]=TryEngorge, Child[2]=TryHungryRush, Child[3]=HuntEnemyUnsafe)