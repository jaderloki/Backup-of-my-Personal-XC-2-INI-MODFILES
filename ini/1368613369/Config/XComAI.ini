[XComGame.X2AIBTBehaviorTree]
; --- don't shoot if you're not an alien
; --- basically since non alien units don't really obey the objective target limits, never let them target the objective in the first place
-Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=HasPriorityTarget, Child[1]=AttackPriorityTarget)
+Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=IsTeam-eTeam_Alien, Child[1]=HasPriorityTarget, Child[2]=AttackPriorityTarget)



+CustomNodes=(NodeTypeString="BanditCondition", ExtendsFromType="Condition", ClassName="Banditry.X2AIBTCondition_NoObjectiveBehavior")
+Behaviors=(BehaviorName=IsObjectiveUnitOrAnObject, NodeType=BanditCondition)
+Behaviors=(BehaviorName=IsNotObjectiveUnitOrAnObject, NodeType=Inverter, Child[0]=IsObjectiveUnitOrAnObject)


+Behaviors=(BehaviorName=TryBanditGrapple, NodeType=Sequence, Child[0]=IsAbilityAvailable-Grapple, Child[1]=FindBanditGrappleDestination, Child[2]=SelectAbility-Grapple)
+Behaviors=(BehaviorName=FindBanditGrappleDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Grapple, Child[2]=UseDashMovement, Child[3]=RequireEnemyLoSToTile, Child[4]=FindDestinationWithLoS-MWP_GrappleOffense)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Grapple, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-Grapple, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Grapple, NodeType=Action, param[0]=UseDestination)

+Behaviors=(BehaviorName=TryHighPriorityShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=HaveHighPriorityTarget, Child[2]=ShootIfAvailable)
+Behaviors=(BehaviorName=HaveHighPriorityTarget, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=FindHighPriorityTarget, Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=FindHighPriorityTarget, NodeType=RepeatUntilFail, Child[0]=NotHighPriorityEvaluateTarget)
+Behaviors=(BehaviorName=NotHighPriorityEvaluateTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsNotHighPriority)
+Behaviors=(BehaviorName=TargetIsNotHighPriority, NodeType=Inverter, Child[0]=TargetIsHighPriority)
+Behaviors=(BehaviorName=TargetIsHighPriority, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetKillableOrFlanked, Child[2]=IsNotObjectiveUnitOrAnObject, Child[3]=AddToTargetScore_1000, Child[4]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetKillableOrFlanked, NodeType=Selector, Child[0]=TargetIsKillable,  Child[1]=IsFlankingTarget)

;new shoot or reload or overwatch to avoid targeting civilians
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_Bandit, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_Bandit, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_Bandit, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_Bandit, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_Bandit, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_Bandit, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_Bandit, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_Bandit)
+Behaviors=(BehaviorName=GenericEvaluateTarget_Bandit, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_Bandit, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_Bandit, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=IsNotObjectiveUnitOrAnObject, Child[7]=AvoidBoundAndPanickedTargets)


+Behaviors=(BehaviorName="BanditGruntRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=BanditGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="BanditGunnerRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=BanditGunner_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="BanditRiflemanRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=BanditGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=BanditGeneric_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=BanditGeneric_RedAbilitySelector)
+Behaviors=(BehaviorName=BanditGeneric_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=BanditGenericRedFirstAction, Child[2]=BanditGenericRedLastAction)

+Behaviors=(BehaviorName=BanditGenericRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=BanditGenericRedFirstActionSelector)
+Behaviors=(BehaviorName=BanditGenericRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBanditGrapple, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryShootOrReloadOrOverwatch_Bandit, \\
	Child[4]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=BanditGenericRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=BanditGenericRedLastActionSelector)
+Behaviors=(BehaviorName=BanditGenericRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=TryShootOrReloadOrOverwatch_Bandit, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)




+Behaviors=(BehaviorName=BanditGunner_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=BanditGunner_RedAbilitySelector)
+Behaviors=(BehaviorName=BanditGunner_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=BanditGunnerRedFirstAction, Child[2]=BanditGunnerRedLastAction)

+Behaviors=(BehaviorName=BanditGunnerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=BanditGunnerRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.
+Behaviors=(BehaviorName=BanditGunnerRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryHighPriorityShot, \\
	Child[2]=TryMoveToSuppressClosest, \\
	Child[3]=TryTwoTurnAttackSupportIfSafe, \\
	Child[4]=SelectMoveProfileByJob, \\
	Child[5]=TryShootOrReloadOrOverwatch_Bandit, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=BanditGunnerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=BanditGunnerRedLastActionSelector)
+Behaviors=(BehaviorName=BanditGunnerRedLastActionSelector, NodeType=Selector, \\
	Child[0]=ShootOrSuppressIfNoGoodShot, \\
	Child[1]=TrySuppressClosest, \\
	Child[2]=TryShootOrReloadOrOverwatch_Bandit, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrAggressive) 