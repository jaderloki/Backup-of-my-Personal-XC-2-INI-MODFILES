;*******************************************************************************************
;  FILE:   Psionics Ex Machina. CBAC Bridge ini                                
;  
;	File created	20/08/20    21:00
;	LAST UPDATED    21/01/21    02:00
;
;	EDITS HERE DO NOT EFFECT THE RAPID PSIONICS VALID ABILITIES, PLEASE SEE THE XCOMPSIONICSEXMACHINA_ABILITIES.ini
;   THIS FILE EFFECTS WHAT COLOUR THE ABILITIES TURN IF THE UNIT IS UNDER THE MODIFYING EFFECT
;
;*******************************************************************************************
[WOTC_CostBasedAbilityColors.UITacticalHUD_Ability_WOTC_CostBasedAbilityColors]
;*******************************************************************************************
; ICON SYMBOL COLORS
;AbilityCostColor_FreeAction =      "5ac864"	;Green
;AbilityTypeColor_Psionic =			"b6b3e3"    ;purple

; ABILITY COST COLOR OVERRIDE LIST
; ********************************
; Use ability cost color overrides to correct any ability colors that dont get handled properly 
;   - this can include mod-added abilities that only return actions via PostAbilityCostPaid (without changing the actual action point costs), etc.
;	- ((THATS US HERE IN THIS MOD WITH THE CLARITY OF MIND / RAPID PSIONICS PERK))
;
; The overrides are entered using the AbilityCostColorOverride struct and the members and their usage are detailed below:
;		var string	AbilityName				(the name of the ability being modified) - REQUIRED field
;		var string	ModifyingAbilityName	(the name of the ability that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	ModifyingEffectName		(the name of the effect that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	OverrideColor			(if a color string is entered, the ability being modified will use that color instead) - OPTIONAL, can be left empty
;		var bool	bIsFreeAction			(if true, the ability being modified will be considered a free action) - OPTIONAL, can be left empty
;		var bool	bIsTurnEnding			(if true, the ability being modified will be considered a turn ending action) - OPTIONAL, can be left empty
;		var bool	bNotTurnEnding			(if true, the ability being modified will be considered a non-turn ending action) - OPTIONAL, can be left empty
;
; Use the following entry format - only include the OPTIONAL members that you need:
;   +AbilityCostColorOverrides=(AbilityName=Name, ModifyingAbilityName=Name, ModifyingEffectName=Name, OverrideColor=Color_String, bIsFreeAction=Bool, bIsTurnEnding=Bool, bNotTurnEnding=Bool)
; ********************************

; THE PSI TEST ABILITIES -- BY DEFAULT USING THESE ABILITIES MAKES ALL PSI-ABILITIES HAVE A FREE ACTION COST FOR THEIR NEXT ACTIVATION IN THIS TURN
; THE ACTUAL 'ACTIVATION' ABILITIES -- HERE FOR EASE BUT DECIDED TO KEEP THEM IN 'FREE GREEN' OUTLINE
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Standard, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Average, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Gifted, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Genius, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Savant, OverrideColor="b6b3e3"); bIsFreeAction=true)

;*******************************************************************************************
; THE GEMS LIST == THE PSI-ABILITY LIST
;	!!	EDITS HERE DO NOT EFFECT THE RAPID PSIONICS VALID ABILITIES, PLEASE SEE THE XCOMPSIONICSEXMACHINA_ABILITIES.ini	!!
;	!!   THIS FILE EFFECTS WHAT COLOUR THE ABILITIES TURN IF THE UNIT IS UNDER THE MODIFYING EFFECT	!!
;*******************************************************************************************

+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Volt,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_PsiStrike,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Fuse,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Harden,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Meditate,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Reanimate,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Exchange,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_VoidConduit,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Skyfall,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_SunderingStorm,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WOTC_APA_Rend,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;support stormriders
;TODO
;+AbilityCostColorOverrides=(AbilityName=,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
