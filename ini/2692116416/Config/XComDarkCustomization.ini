[FTBMocxUsePoolClass.XGCharacterGenerator_DarkXCom_Override]
; Configuration to use the expanded customization options
;current valid class names:
;DarkRanger
;DarkSniper
;DarkGrenadier
;DarkSpecialist
;DarkPsiAgent
;DarkReclaimed
;mod added valid class names:
;DarkZealot
;DarkPhantom
;leave DarkClassName blank if you want it to be used for all classes
;same goes for ArmorName if you want it to be used for all armors
;structure of the entire struct is as-is
;struct ExpandedClassCosmetics
;{
;   var name DarkClassName;                 // class this is used for
;   var name ArmorName;             // Armor this is meant for
;   var int  iGender;       //use eGender_Male or eGender_Female
;   var name Torso;
;   var name Legs;
;   var name Arms;
;   var name LeftArm;
;   var name RightArm;
;   var name LeftArmDeco;
;   var name RightArmDeco;
;   var name Thighs; //XPACK added cosmetics
;   var name TorsoDeco;
;   var name RightForearm;
;   var name LeftForearm;
;   var name Shins;
;   var name Voice;
;   var name Flag;
;   var name Helmet;
;   var name FacePropUpper;
;   var name FacePropLower;
;	// Cosmetic options supported by MOCX Customizer+
;	var name LeftArmTattoo;
;	var name RightArmTattoo;
;	var name FacePaint;
;	var name Scars;
;	var name WeaponPattern;
;	var name Patterns;
;	var int iArmorTint;
;	var int iArmorTintSecondary;
;	var int iWeaponTint;	
;	var int iTattooTint;
;	var name Head;
;	var int iRace;
;	var array<name> HelmetHeads; << An array of helmets to randomly select from if using an invisible head
;   var int iSkinColor;
;   var int iEyeColor;
;   var int iHairColor;
;	var name HairCut;
;   var array<name> VoiceOverrides; << An array of voices which customization will randomly pick from. Overrides the primary "Voice" option if there are values set here
;};
;remember to not add in arms if using left/right arms, and vice versa. That goes for arm decos and forearms too.

;a note about the Flag variable: it's reliant that the name for the flag texture and the country it's for on are named the same: it *will* result in non-functioning flags otherwise.
;note that due to how structs work, you can't skip a variable: you can leave it blank, but you have to acknolwedge it

;+ExpandedSoldierAppearances=(DarkClassName=, ArmorName=, iGender=, Torso=, Legs=, Arms=, LeftArm=, RightArm=, LeftArmDeco=, RightArmDeco=, \\
;                       Thighs=, TorsoDeco=, RightForearm=, LeftForearm=, Shins=, Voice=, Flag=, Helmet=, FacePropUpper=, FacePropLower=, \\
;                       Head=, iRace=, HelmetHeads=(), VoiceOverrides=())

;there is also one more thing: order of things here matter
;general order should be class and armour specific, then class specific, then armour specific, then finally general
;this is all from top to bottom, so it doesn't accidentally leave you with cosmetics meant for something else