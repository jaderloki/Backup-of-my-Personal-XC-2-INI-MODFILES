;========================================================================================================
; Cost-Based Ability Colors
; https://steamcommunity.com/sharedfiles/filedetails/?id=1289686596
;========================================================================================================
[WOTC_CostBasedAbilityColors.UITacticalHUD_Ability_WOTC_CostBasedAbilityColors]

; ICON BORDER COLORS
; The 'LastAction' colors can be replaced with either the straight AP-based color or Turn-Ending color if you want the simpler approach of always showing the AP cost
; or always showing whether the action will end the turn. For example, if you want to have 1AP, non-turn ending actions show yellow as plain turn ending actions when
; the unit only has 1AP left like previous versions, copy the OneActionEndTurn color into the OneActionLastAction variable. Alternatively, if you want the abilities
; to show their cost regardless of the unit's current AP considerations, copy the OneAction color into the OneActionLastAction variable.
;AbilityCostColor_FreeAction =			"5ac864"	;Green
;AbilityCostColor_OneAction =			"41afd7"	;Blue
;AbilityCostColor_OneActionLastAction =	"62968d"	;Teal
;AbilityCostColor_OneActionEndTurn =		"e1be46"	;Yellow
;AbilityCostColor_TwoPlusActions =		"ff6f00"	;Orange
;AbilityCostColor_TwoPlusLastAction =	"bd7a0f"	;Yellow Orange
;AbilityCostColor_TwoPlusEndTurn =		"bf5e0a"	;Dark Orange
;AbilityCostColor_Unavailable =			"888888"	;Grey


; ABILITY COST COLOR OVERRIDE LIST
; ********************************
; Use ability cost color overrides to correct any ability colors that dont get handled properly - this can include mod-added abilities that only return
; actions via PostAbilityCostPaid (without changing the actual action point costs), etc.
; The overrides are entered using the AbilityCostColorOverride struct and the members and their usage are detailed below:
;		var string	AbilityName				(the name of the ability being modified) - REQUIRED field
;		var string	ModifyingAbilityName	(the name of the ability that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	ModifyingEffectName		(the name of the effect that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	ModifyingActionName		(the name of the actionpoint type that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	OverrideColor			(if a color string is entered, the ability being modified will use that color instead) - OPTIONAL, can be left empty
;		var bool	bIsFreeAction			(if true, the ability being modified will be considered a free action) - OPTIONAL, can be left empty
;		var bool	bIsTurnEnding			(if true, the ability being modified will be considered a turn ending action) - OPTIONAL, can be left empty
;		var bool	bNotTurnEnding			(if true, the ability being modified will be considered a non-turn ending action) - OPTIONAL, can be left empty
;
;		NOTES:	More than one entry for a single ability can be entered when there are more than one ModifyingAbilityName or ModifyingEffectName that
;				may modify that ability. When a ModifyingAbilityName AND a ModifyingEffectName are present in the same AbilityCostColorOverride entry,
;				they will be treated as an AND statement. The OverrideColor, if defined, will take first priority - use this to give an ability a border
;				color outside the preset categories. The bIsFreeAction bool will be evaluated next and, if true, will use the FreeAction border color.
;				If neither an OverrideColor or the bIsFreeAction bool are defined, then the TurnEnding bools will be evaluated for their preset colors.
;				bIsFreeAction and bIsTurnEnding are immediate overrides - when either one is found in an override, their preset color is used and no
;				other override entries are evaluated. bNotTurnEnding, however, is not immediate - the value is stored and continues evaluating other
;				override entries, primarily to allow any potential bIsFreeAction overrides to supercede it.
;
; Use the following entry format - only include the OPTIONAL members that you need:
;+AbilityCostColorOverrides=(AbilityName=Name, ModifyingAbilityName=Name, ModifyingEffectName=Name, ModifyingActionName=Name, OverrideColor=Color_String, bIsFreeAction=Bool, bIsTurnEnding=Bool, bNotTurnEnding=Bool)
; ********************************


; Sniper Rifle Overwatch gets the 2 AP color, have to do it as hex color as these overrides do not support referring to the "TwoPlus" colors.
;   If you changed AbilityCostColor_TwoPlusEndTurn, change it here as well.
;   Ready For Anything makes it only take 1 AP, must be before the default color in the array.
+AbilityCostColorOverrides=(AbilityName="SniperRifleOverwatch", ModifyingAbilityName="WOTC_APA_ReadyForAnything", bIsTurnEnding=true)
+AbilityCostColorOverrides=(AbilityName="SniperRifleOverwatch", ModifyingAbilityName="SniperStandardFire", OverrideColor="bf5e0a")

; Also Long Watch but without the Ready For Anything thing as it doesn't get that.
+AbilityCostColorOverrides=(AbilityName="LongWatch", ModifyingAbilityName="SniperStandardFire", OverrideColor="bf5e0a")

; And LWOTC Lead The Target
+AbilityCostColorOverrides=(AbilityName="LeadTheTarget_LW", ModifyingAbilityName="SniperStandardFire", OverrideColor="bf5e0a")


; Protect and Serve always gives an extra action after Shield Wall which is normally turn-ending.
;   Overriding with color as using bNotTurnEnding would get colored differently when it would be your last action and
;   this is always refunding an extra point so should always be the normal blue color.
;   If you changed AbilityCostColor_OneAction, change it here as well.
+AbilityCostColorOverrides=(AbilityName="ShieldWall", ModifyingAbilityName="F_ProtectAndServe", OverrideColor="41afd7")


; Commented out BS_RapidStun and ShadowOps_Fastball overrides because of them using XMB's refund effect which doesn't
;   get removed when the refund is used so the affected abilities just stay green through the entire turn even when they
;   are no longer free after the first one in a turn.

; Quick Zap makes Arcthrower abilities free to use
;+AbilityCostColorOverrides=(AbilityName="ArcthrowerStun", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="EMPulser", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="ChainLightning", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcBoostMove", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcPhaseLance", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcFuse", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcJoltAwake", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcRobotInsanity", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcStabilize", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcHaywire", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcRepair", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="MZArcElectrocute", ModifyingEffectName="BS_RapidStun", bIsFreeAction=true)


; Shadow Ops Fastball makes grenades free to use
;+AbilityCostColorOverrides=(AbilityName="ThrowGrenade", ModifyingEffectName="ShadowOps_Fastball", bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName="LaunchGrenade", ModifyingEffectName="ShadowOps_Fastball", bIsFreeAction=true)


; Color Hacking ability borders White when Failsafe is active:
;+AbilityCostColorOverrides=(AbilityName="HaywireProtocol", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Chest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Workstation", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_ObjectiveChest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="WOTC_APA_FullOverride", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")

+AbilityCostColorOverrides=(AbilityName="WOTC_APA_ReaperHack", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="SKULLJACKAbility", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="SKULLMINEAbility", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Scan", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Hack_ElevatorControl", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_Chest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_ObjectiveChest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_Workstation", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_Scan", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_ElevatorControl", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="FullOverride", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="LW2WotC_FullOverride", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_CovertObjectiveChest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Hack", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Chest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Workstation", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_ObjectiveChest", ModifyingEffectName="WOTC_APA_FailsafeEffect", OverrideColor="d3e8e8")

; Color Hacking ability borders White when Failsafe is active:
;+AbilityCostColorOverrides=(AbilityName="HaywireProtocol", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="D3E8E8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="D3E8E8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Chest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="D3E8E8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Workstation", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="D3E8E8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_ObjectiveChest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="D3E8E8")
;+AbilityCostColorOverrides=(AbilityName="WOTC_APA_FullOverride", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="D3E8E8")

+AbilityCostColorOverrides=(AbilityName="WOTC_APA_ReaperHack", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="SKULLJACKAbility", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="SKULLMINEAbility", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Scan", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Hack_ElevatorControl", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_Chest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_ObjectiveChest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_Workstation", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_Scan", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_ElevatorControl", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="FullOverride", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="LW2WotC_FullOverride", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="Hack_CovertObjectiveChest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Hack", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Chest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Workstation", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")
+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_ObjectiveChest", ModifyingEffectName="Rusty_FailsafeEffect", OverrideColor="d3e8e8")

; and LW2 Classes Perk Pack didn't have these at all (but commented out for now because this is a passive effect)
;+AbilityCostColorOverrides=(AbilityName="HaywireProtocol", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Chest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Workstation", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_ObjectiveChest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="WOTC_APA_FullOverride", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="WOTC_APA_ReaperHack", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="SKULLJACKAbility", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="SKULLMINEAbility", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Scan", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="IntrusionProtocol_Hack_ElevatorControl", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack_Chest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack_ObjectiveChest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack_Workstation", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack_Scan", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack_ElevatorControl", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="FullOverride", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="LW2WotC_FullOverride", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="Hack_CovertObjectiveChest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Hack", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Chest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_Workstation", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
;+AbilityCostColorOverrides=(AbilityName="RTTechnopathy_ObjectiveChest", ModifyingEffectName="Failsafe", OverrideColor="d3e8e8")
